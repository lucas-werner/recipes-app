'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AtomSpinner = undefined;

var _templateObject = _taggedTemplateLiteral(['\n  height: ', 'px;\n  width: ', 'px;\n  overflow: hidden;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .spinner-inner {\n    position: relative;\n    display: block;\n    height: 100%;\n    width: 100%;\n  }\n\n  .spinner-circle {\n    display: block;\n    position: absolute;\n    color: ', ';\n    font-size: calc(', 'px * 0.24);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .spinner-line {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    animation-duration: ', 'ms;\n    border-left-width: calc(', 'px / 25);\n    border-top-width: calc(', 'px / 25);\n    border-left-color: ', ';\n    border-left-style: solid;\n    border-top-style: solid;\n    border-top-color: transparent;\n  }\n\n  .spinner-line:nth-child(1) {\n    animation: atom-spinner-animation-1 ', 'ms\n      linear infinite;\n    transform: rotateZ(120deg) rotateX(66deg) rotateZ(0deg);\n  }\n\n  .spinner-line:nth-child(2) {\n    animation: atom-spinner-animation-2 ', 'ms\n      linear infinite;\n    transform: rotateZ(240deg) rotateX(66deg) rotateZ(0deg);\n  }\n\n  .spinner-line:nth-child(3) {\n    animation: atom-spinner-animation-3 ', 'ms\n      linear infinite;\n    transform: rotateZ(360deg) rotateX(66deg) rotateZ(0deg);\n  }\n\n  @keyframes atom-spinner-animation-1 {\n    100% {\n      transform: rotateZ(120deg) rotateX(66deg) rotateZ(360deg);\n    }\n  }\n  @keyframes atom-spinner-animation-2 {\n    100% {\n      transform: rotateZ(240deg) rotateX(66deg) rotateZ(360deg);\n    }\n  }\n  @keyframes atom-spinner-animation-3 {\n    100% {\n      transform: rotateZ(360deg) rotateX(66deg) rotateZ(360deg);\n    }\n  }\n'], ['\n  height: ', 'px;\n  width: ', 'px;\n  overflow: hidden;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .spinner-inner {\n    position: relative;\n    display: block;\n    height: 100%;\n    width: 100%;\n  }\n\n  .spinner-circle {\n    display: block;\n    position: absolute;\n    color: ', ';\n    font-size: calc(', 'px * 0.24);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .spinner-line {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    animation-duration: ', 'ms;\n    border-left-width: calc(', 'px / 25);\n    border-top-width: calc(', 'px / 25);\n    border-left-color: ', ';\n    border-left-style: solid;\n    border-top-style: solid;\n    border-top-color: transparent;\n  }\n\n  .spinner-line:nth-child(1) {\n    animation: atom-spinner-animation-1 ', 'ms\n      linear infinite;\n    transform: rotateZ(120deg) rotateX(66deg) rotateZ(0deg);\n  }\n\n  .spinner-line:nth-child(2) {\n    animation: atom-spinner-animation-2 ', 'ms\n      linear infinite;\n    transform: rotateZ(240deg) rotateX(66deg) rotateZ(0deg);\n  }\n\n  .spinner-line:nth-child(3) {\n    animation: atom-spinner-animation-3 ', 'ms\n      linear infinite;\n    transform: rotateZ(360deg) rotateX(66deg) rotateZ(0deg);\n  }\n\n  @keyframes atom-spinner-animation-1 {\n    100% {\n      transform: rotateZ(120deg) rotateX(66deg) rotateZ(360deg);\n    }\n  }\n  @keyframes atom-spinner-animation-2 {\n    100% {\n      transform: rotateZ(240deg) rotateX(66deg) rotateZ(360deg);\n    }\n  }\n  @keyframes atom-spinner-animation-3 {\n    100% {\n      transform: rotateZ(360deg) rotateX(66deg) rotateZ(360deg);\n    }\n  }\n']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Atom = _styledComponents2.default.div(_templateObject, function (props) {
  return props.size;
}, function (props) {
  return props.size;
}, function (props) {
  return props.color;
}, function (props) {
  return props.size;
}, function (props) {
  return props.animationDuration;
}, function (props) {
  return props.size;
}, function (props) {
  return props.size;
}, function (props) {
  return props.color;
}, function (props) {
  return props.animationDuration;
}, function (props) {
  return props.animationDuration;
}, function (props) {
  return props.animationDuration;
});

var propTypes = {
  size: _propTypes2.default.number,
  animationDuration: _propTypes2.default.number,
  color: _propTypes2.default.string,
  className: _propTypes2.default.string,
  style: _propTypes2.default.object
};

var defaultProps = {
  size: 60,
  color: 'red',
  animationDuration: 1000,
  className: ''
};

var AtomSpinner = function AtomSpinner(_ref) {
  var size = _ref.size,
      animationDuration = _ref.animationDuration,
      color = _ref.color,
      className = _ref.className,
      style = _ref.style,
      props = _objectWithoutProperties(_ref, ['size', 'animationDuration', 'color', 'className', 'style']);

  return _react2.default.createElement(
    Atom,
    Object.assign({
      size: size,
      color: color,
      animationDuration: animationDuration,
      className: 'atom-spinner' + (className ? ' ' + className : ''),
      style: style
    }, props),
    _react2.default.createElement(
      'div',
      { className: 'spinner-inner' },
      _react2.default.createElement('div', { className: 'spinner-line' }),
      _react2.default.createElement('div', { className: 'spinner-line' }),
      _react2.default.createElement('div', { className: 'spinner-line' }),
      _react2.default.createElement(
        'div',
        { className: 'spinner-circle' },
        '\u25CF'
      )
    )
  );
};

exports.AtomSpinner = AtomSpinner;
AtomSpinner.propTypes = propTypes;
AtomSpinner.defaultProps = defaultProps;

exports.default = AtomSpinner;

//# sourceMappingURL=AtomSpinner.js.map