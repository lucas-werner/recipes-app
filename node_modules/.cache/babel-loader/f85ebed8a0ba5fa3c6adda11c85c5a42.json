{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/pages/InProcessPage/index.js\";\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { CheckBox, Card, FavoriteIcon, ShareIcon } from '../../components';\nimport { fetchDrinkApi, handleDrinksData } from '../../services/APIs/DRINKS_API';\nimport { fetchFoodsApi, handleFoodsData } from '../../services/APIs/FOODS_API';\nimport useRequisition from '../../hooks/requisition';\nimport useLocalStorage from '../../hooks/localStorage';\nimport { getInProgress, setInProgress, rmInProgress, setDoneRecipeStorage } from '../../services/APIs/APIlocalStorage';\n\nconst fetchAPI = async (type, id, setEat) => {\n  if (type === 'food') {\n    return fetchFoodsApi(`lookup.php?i=${id}`).then(({\n      meals\n    }) => setEat(handleFoodsData(meals[0])));\n  } else if (type === 'drink') {\n    return fetchDrinkApi(`lookup.php?i=${id}`).then(({\n      drinks\n    }) => setEat(handleDrinksData(drinks[0])));\n  }\n\n  return Promise.reject(`type ${type} insn't valid`);\n};\n\nconst endRecipe = (type, id) => () => {\n  rmInProgress(type, id);\n  setDoneRecipeStorage(id);\n};\n\nconst changeCheckBox = (usedIng, checked, value) => {\n  if (checked) return [...usedIng, Number(value)].sort((a, b) => a - b);\n  return usedIng.filter(usedIngredient => usedIngredient !== Number(value));\n};\n\nconst renderBtn = (disabled, onClick) => disabled ? /*#__PURE__*/React.createElement(\"button\", {\n  \"data-testid\": \"finish-recipe-btn\",\n  disabled: true,\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }\n}, \"Finalizar Receita\") : /*#__PURE__*/React.createElement(Link, {\n  to: \"/receitas-feitas\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  \"data-testid\": \"finish-recipe-btn\",\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }\n}, \"Finalizar Receita\"));\n\nconst setInProgressUse = (type, id) => newUsed => setInProgress(type, id, newUsed);\n\nfunction InProcessPage({\n  id,\n  type\n}) {\n  const [eat, setEat] = useState(null);\n  const [{\n    loading,\n    error\n  }] = useRequisition(useCallback(() => fetchAPI(type, id, setEat), [type, id, setEat]));\n  const [usedIngredients, setUsedIngredients] = useLocalStorage(getInProgress(type)[id] || [], setInProgressUse(type, id));\n  const toogleCheckbox = useCallback(({\n    target: {\n      value,\n      checked\n    }\n  }) => {\n    setUsedIngredients(usedIng => changeCheckBox(usedIng, checked, value));\n  }, [setUsedIngredients]);\n  if (error) return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Aconteceu algo errado em detalhes de bebidas em progresso\");\n  if (loading) return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, \"Carrgando detalhes de bebidas em progresso...\");\n  const {\n    name,\n    srcImage,\n    category,\n    ingredients,\n    instructions,\n    isAlcoholic\n  } = eat;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    srcImage: srcImage,\n    name: name,\n    testid: {\n      title: 'recipe-title',\n      img: 'recipe-photo'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ShareIcon, {\n    textToCopy: `${window.location.href.slice(0, -12)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteIcon, {\n    eat: eat,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, isAlcoholic || category), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, instructions), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, ingredients && ingredients.map(({\n    ingredient\n  }, index) => /*#__PURE__*/React.createElement(CheckBox, {\n    key: ingredient,\n    checked: usedIngredients.some(used => used === index),\n    index: index,\n    item: ingredient,\n    handleChange: toogleCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))), renderBtn(usedIngredients.length < ingredients.length, endRecipe(type, id)));\n}\n\nInProcessPage.propTypes = {\n  id: PropTypes.number.isRequired,\n  type: PropTypes.oneOf(['food', 'drink']).isRequired\n};\nexport default InProcessPage;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/pages/InProcessPage/index.js"],"names":["React","useCallback","useState","PropTypes","Link","CheckBox","Card","FavoriteIcon","ShareIcon","fetchDrinkApi","handleDrinksData","fetchFoodsApi","handleFoodsData","useRequisition","useLocalStorage","getInProgress","setInProgress","rmInProgress","setDoneRecipeStorage","fetchAPI","type","id","setEat","then","meals","drinks","Promise","reject","endRecipe","changeCheckBox","usedIng","checked","value","Number","sort","a","b","filter","usedIngredient","renderBtn","disabled","onClick","setInProgressUse","newUsed","InProcessPage","eat","loading","error","usedIngredients","setUsedIngredients","toogleCheckbox","target","name","srcImage","category","ingredients","instructions","isAlcoholic","title","img","window","location","href","slice","map","ingredient","index","some","used","length","propTypes","number","isRequired","oneOf"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { CheckBox, Card, FavoriteIcon, ShareIcon } from '../../components';\n\nimport { fetchDrinkApi, handleDrinksData } from '../../services/APIs/DRINKS_API';\nimport { fetchFoodsApi, handleFoodsData } from '../../services/APIs/FOODS_API';\n\nimport useRequisition from '../../hooks/requisition';\nimport useLocalStorage from '../../hooks/localStorage';\n\nimport {\n  getInProgress,\n  setInProgress,\n  rmInProgress,\n  setDoneRecipeStorage,\n} from '../../services/APIs/APIlocalStorage';\n\nconst fetchAPI = async (type, id, setEat) => {\n  if (type === 'food') {\n    return fetchFoodsApi(`lookup.php?i=${id}`)\n    .then(({ meals }) => setEat(handleFoodsData(meals[0])));\n  } else if (type === 'drink') {\n    return fetchDrinkApi(`lookup.php?i=${id}`)\n    .then(({ drinks }) => setEat(handleDrinksData(drinks[0])));\n  } return Promise.reject(`type ${type} insn't valid`);\n};\n\nconst endRecipe = (type, id) => () => {\n  rmInProgress(type, id);\n  setDoneRecipeStorage(id);\n};\n\nconst changeCheckBox = (usedIng, checked, value) => {\n  if (checked) return [...usedIng, Number(value)].sort((a, b) => a - b);\n  return usedIng.filter((usedIngredient) => usedIngredient !== Number(value));\n};\n\nconst renderBtn = (disabled, onClick) => (\n  disabled ?\n    <button data-testid=\"finish-recipe-btn\" disabled onClick={onClick}>\n      Finalizar Receita\n    </button>\n    : <Link to=\"/receitas-feitas\">\n      <button data-testid=\"finish-recipe-btn\" onClick={onClick}>Finalizar Receita</button>\n    </Link>\n);\n\nconst setInProgressUse = (type, id) => (newUsed) => setInProgress(type, id, newUsed);\n\nfunction InProcessPage({ id, type }) {\n  const [eat, setEat] = useState(null);\n  const [{ loading, error }] = useRequisition(\n    useCallback(() => fetchAPI(type, id, setEat), [type, id, setEat]),\n  );\n  const [usedIngredients, setUsedIngredients] = useLocalStorage(\n    getInProgress(type)[id] || [],\n    setInProgressUse(type, id),\n  );\n\n  const toogleCheckbox = useCallback(({ target: { value, checked } }) => {\n    setUsedIngredients((usedIng) => changeCheckBox(usedIng, checked, value));\n  }, [setUsedIngredients]);\n\n  if (error) return <h1>Aconteceu algo errado em detalhes de bebidas em progresso</h1>;\n  if (loading) return <h1>Carrgando detalhes de bebidas em progresso...</h1>;\n\n  const { name, srcImage, category, ingredients, instructions, isAlcoholic } = eat;\n  return (\n    <div>\n      <Card\n        srcImage={srcImage}\n        name={name}\n        testid={{ title: 'recipe-title', img: 'recipe-photo' }}\n      />\n      <ShareIcon textToCopy={`${window.location.href.slice(0, -12)}`} />\n      <FavoriteIcon eat={eat} type={type} />\n      <p data-testid=\"recipe-category\">{isAlcoholic || category}</p>\n      <p data-testid=\"instructions\">{instructions}</p>\n      <div>\n        {ingredients && ingredients.map(({ ingredient }, index) => (\n          <CheckBox\n            key={ingredient}\n            checked={usedIngredients.some((used) => used === index)}\n            index={index}\n            item={ingredient}\n            handleChange={toogleCheckbox}\n          />\n        ))}\n      </div>\n      {renderBtn(usedIngredients.length < ingredients.length, endRecipe(type, id))}\n    </div>\n  );\n}\n\nInProcessPage.propTypes = {\n  id: PropTypes.number.isRequired,\n  type: PropTypes.oneOf(['food', 'drink']).isRequired,\n};\n\nexport default InProcessPage;\n"]},"metadata":{},"sourceType":"module"}