{"ast":null,"code":"import React from'react';import ReactPlayer from'react-player';import{Link}from'react-router-dom';import Card from'./Card';import ShareIcon from'./ShareIcon';import FavoriteIcon from'./FavoriteIcon';import{getInProgress,doneRecipes,translateType}from'../services/APIs/APIlocalStorage';var beginRecipeBtn=function beginRecipeBtn(id,type){return Boolean(doneRecipes(id))||/*#__PURE__*/React.createElement(Link,{to:\"/\".concat(translateType(type),\"s/\").concat(id,\"/in-progress\")},/*#__PURE__*/React.createElement(\"button\",{\"data-testid\":\"start-recipe-btn\",className:\"buttonIniciar\"},getInProgress(type)[id]?'Continuar Receita':'Iniciar Receita'));};function DetailsCard(_ref){var recipe=_ref.recipe,type=_ref.type;var id=recipe.id,name=recipe.name,srcImage=recipe.srcImage,video=recipe.video,category=recipe.category,ingredients=recipe.ingredients,instructions=recipe.instructions,isAlcoholic=recipe.isAlcoholic;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,{name:name,srcImage:srcImage,testid:{title:'recipe-title',img:'recipe-photo'}}),/*#__PURE__*/React.createElement(ShareIcon,{textToCopy:window.location.href}),/*#__PURE__*/React.createElement(FavoriteIcon,{recipe:recipe,type:translateType(type)}),/*#__PURE__*/React.createElement(\"p\",{\"data-testid\":\"recipe-category\"},isAlcoholic||category),/*#__PURE__*/React.createElement(\"ul\",null,ingredients.map(function(_ref2,index){var ingredient=_ref2.ingredient,measure=_ref2.measure;return/*#__PURE__*/React.createElement(\"li\",{\"data-testid\":\"\".concat(index,\"-ingredient-name-and-measure\"),key:ingredient},ingredient,\" \",measure);})),/*#__PURE__*/React.createElement(\"p\",{\"data-testid\":\"instructions\"},instructions),video&&/*#__PURE__*/React.createElement(\"div\",{\"data-testid\":\"video\"},/*#__PURE__*/React.createElement(ReactPlayer,{url:video})),beginRecipeBtn(id,type));}DetailsCard.defaultProps={recipe:{source:null,isAlcoholic:null,origin:'',video:''}};export default DetailsCard;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/components/DetailsCard.js"],"names":["React","ReactPlayer","Link","Card","ShareIcon","FavoriteIcon","getInProgress","doneRecipes","translateType","beginRecipeBtn","id","type","Boolean","DetailsCard","recipe","name","srcImage","video","category","ingredients","instructions","isAlcoholic","title","img","window","location","href","map","index","ingredient","measure","defaultProps","source","origin"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OAASC,aAAT,CAAwBC,WAAxB,CAAqCC,aAArC,KAA0D,kCAA1D,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAKC,IAAL,QACrBC,CAAAA,OAAO,CAACL,WAAW,CAACG,EAAD,CAAZ,CAAP,eACE,oBAAC,IAAD,EAAM,EAAE,YAAMF,aAAa,CAACG,IAAD,CAAnB,cAA8BD,EAA9B,gBAAR,eACE,8BACE,cAAY,kBADd,CAEE,SAAS,CAAC,eAFZ,EAGEJ,aAAa,CAACK,IAAD,CAAb,CAAoBD,EAApB,EAA0B,mBAA1B,CAAgD,iBAHlD,CADF,CAFmB,EAAvB,CAUA,QAASG,CAAAA,WAAT,MAAuC,IAAhBC,CAAAA,MAAgB,MAAhBA,MAAgB,CAARH,IAAQ,MAARA,IAAQ,IAC7BD,CAAAA,EAD6B,CACmDI,MADnD,CAC7BJ,EAD6B,CACzBK,IADyB,CACmDD,MADnD,CACzBC,IADyB,CACnBC,QADmB,CACmDF,MADnD,CACnBE,QADmB,CACTC,KADS,CACmDH,MADnD,CACTG,KADS,CACFC,QADE,CACmDJ,MADnD,CACFI,QADE,CACQC,WADR,CACmDL,MADnD,CACQK,WADR,CACqBC,YADrB,CACmDN,MADnD,CACqBM,YADrB,CACmCC,WADnC,CACmDP,MADnD,CACmCO,WADnC,CAGrC,mBACE,4CACE,oBAAC,IAAD,EACE,IAAI,CAAEN,IADR,CAEE,QAAQ,CAAEC,QAFZ,CAGE,MAAM,CAAE,CAAEM,KAAK,CAAE,cAAT,CAAyBC,GAAG,CAAE,cAA9B,CAHV,EADF,cAME,oBAAC,SAAD,EAAW,UAAU,CAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAvC,EANF,cAOE,oBAAC,YAAD,EAAc,MAAM,CAAEZ,MAAtB,CAA8B,IAAI,CAAEN,aAAa,CAACG,IAAD,CAAjD,EAPF,cAQE,yBAAG,cAAY,iBAAf,EAAkCU,WAAW,EAAIH,QAAjD,CARF,cASE,8BACGC,WAAW,CAACQ,GAAZ,CAAgB,eAA0BC,KAA1B,KAAGC,CAAAA,UAAH,OAAGA,UAAH,CAAeC,OAAf,OAAeA,OAAf,oBACf,0BAAI,wBAAgBF,KAAhB,gCAAJ,CAAyD,GAAG,CAAEC,UAA9D,EACGA,UADH,KACgBC,OADhB,CADe,EAAhB,CADH,CATF,cAgBE,yBAAG,cAAY,cAAf,EAA+BV,YAA/B,CAhBF,CAiBGH,KAAK,eAAI,2BAAK,cAAY,OAAjB,eAAyB,oBAAC,WAAD,EAAa,GAAG,CAAEA,KAAlB,EAAzB,CAjBZ,CAkBGR,cAAc,CAACC,EAAD,CAAKC,IAAL,CAlBjB,CADF,CAsBD,CAuBDE,WAAW,CAACkB,YAAZ,CAA2B,CACzBjB,MAAM,CAAE,CAAEkB,MAAM,CAAE,IAAV,CAAgBX,WAAW,CAAE,IAA7B,CAAmCY,MAAM,CAAE,EAA3C,CAA+ChB,KAAK,CAAE,EAAtD,CADiB,CAA3B,CAIA,cAAeJ,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPlayer from 'react-player';\nimport { Link } from 'react-router-dom';\n\nimport Card from './Card';\nimport ShareIcon from './ShareIcon';\nimport FavoriteIcon from './FavoriteIcon';\n\nimport { getInProgress, doneRecipes, translateType } from '../services/APIs/APIlocalStorage';\n\nconst beginRecipeBtn = (id, type) => (\n  Boolean(doneRecipes(id)) ||\n    <Link to={`/${translateType(type)}s/${id}/in-progress`}>\n      <button\n        data-testid=\"start-recipe-btn\"\n        className=\"buttonIniciar\"\n      >{getInProgress(type)[id] ? 'Continuar Receita' : 'Iniciar Receita'}</button>\n    </Link>\n);\n\nfunction DetailsCard({ recipe, type }) {\n  const { id, name, srcImage, video, category, ingredients, instructions, isAlcoholic } = recipe;\n\n  return (\n    <div>\n      <Card\n        name={name}\n        srcImage={srcImage}\n        testid={{ title: 'recipe-title', img: 'recipe-photo' }}\n      />\n      <ShareIcon textToCopy={window.location.href} />\n      <FavoriteIcon recipe={recipe} type={translateType(type)} />\n      <p data-testid=\"recipe-category\">{isAlcoholic || category}</p>\n      <ul>\n        {ingredients.map(({ ingredient, measure }, index) => (\n          <li data-testid={`${index}-ingredient-name-and-measure`} key={ingredient}>\n            {ingredient} {measure}\n          </li>\n        ))}\n      </ul>\n      <p data-testid=\"instructions\">{instructions}</p>\n      {video && <div data-testid=\"video\"><ReactPlayer url={video} /></div>}\n      {beginRecipeBtn(id, type)}\n    </div>\n  );\n}\n\nDetailsCard.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    instructions: PropTypes.string.isRequired,\n    origin: PropTypes.string,\n    srcImage: PropTypes.string.isRequired,\n    video: PropTypes.string,\n    source: PropTypes.string,\n    ingredients: PropTypes.arrayOf(\n      PropTypes.shape({\n        ingredient: PropTypes.string.isRequired,\n        measure: PropTypes.string,\n      }).isRequired,\n    ).isRequired,\n    isAlcoholic: PropTypes.string,\n  }).isRequired,\n  type: PropTypes.oneOf(['food', 'drink']).isRequired,\n};\n\nDetailsCard.defaultProps = {\n  recipe: { source: null, isAlcoholic: null, origin: '', video: '' },\n};\n\nexport default DetailsCard;\n"]},"metadata":{},"sourceType":"module"}