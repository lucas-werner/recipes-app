{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/github-personal/recipes-app/src/components/CardFavDone.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ShareIcon from './ShareIcon';\nimport './CardFavDone.css';\nimport { rmFromFavoriteStorage } from '../services/APIs/APIlocalStorage';\n\nconst addExtraInfo = (tags, doneDate, index) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  \"data-testid\": `${index}-horizontal-done-date`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, \"Feita em: \", new Date(doneDate).toLocaleDateString()), tags.map(tag => /*#__PURE__*/React.createElement(\"span\", {\n  key: tag,\n  className: \"food-tag\",\n  \"data-testid\": `${index}-${tag}-horizontal-tag`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, tag)));\n\nfunction CardFavDone({\n  id,\n  type,\n  area,\n  name,\n  image,\n  category,\n  alcoholicOrNot,\n  doneDate,\n  tags,\n  mode,\n  index\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-fav-done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: name,\n    \"data-testid\": `${index}-horizontal-image`,\n    src: image,\n    width: \"165px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"food-info\",\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, area || alcoholicOrNot, \" - \", category), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"food-title\",\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, mode === 'done' ? addExtraInfo(tags, doneDate, index) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"unfavoriteBtn\",\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    onClick: () => rmFromFavoriteStorage(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ShareIcon, {\n    textToCopy: `${window.location.host}/${type}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))));\n}\n\nCardFavDone.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  doneDate: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mode: PropTypes.string\n};\nCardFavDone.defaultProps = {\n  index: null,\n  show: true\n};\nexport default CardFavDone;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/components/CardFavDone.js"],"names":["React","Link","PropTypes","ShareIcon","rmFromFavoriteStorage","addExtraInfo","tags","doneDate","index","Date","toLocaleDateString","map","tag","CardFavDone","id","type","area","name","image","category","alcoholicOrNot","mode","window","location","host","propTypes","string","isRequired","number","arrayOf","defaultProps","show"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ShareIcon from './ShareIcon';\nimport './CardFavDone.css';\nimport { rmFromFavoriteStorage } from '../services/APIs/APIlocalStorage';\n\nconst addExtraInfo = (tags, doneDate, index) => (\n  <div>\n    <p data-testid={`${index}-horizontal-done-date`}>\n      Feita em: {new Date(doneDate).toLocaleDateString()}\n    </p>\n    {tags.map((tag) =>\n      <span\n        key={tag}\n        className=\"food-tag\"\n        data-testid={`${index}-${tag}-horizontal-tag`}\n      >\n        {tag}\n      </span>,\n      )}\n  </div>\n);\n\nfunction CardFavDone({\n  id,\n  type,\n  area,\n  name,\n  image,\n  category,\n  alcoholicOrNot,\n  doneDate,\n  tags,\n  mode,\n  index,\n}) {\n  return (\n    <div className=\"card-fav-done\">\n      <Link to={`/${type}s/${id}`}>\n        <img\n          alt={name}\n          data-testid={`${index}-horizontal-image`}\n          src={image}\n          width=\"165px\"\n        />\n      </Link>\n      <div className=\"info\">\n        <Link to={`/${type}s/${id}`}>\n          <p\n            className=\"food-info\"\n            data-testid={`${index}-horizontal-top-text`}\n          >\n            {area || alcoholicOrNot} - {category}\n          </p>\n          <p className=\"food-title\" data-testid={`${index}-horizontal-name`} >{name}</p>\n        </Link>\n        <div className=\"action-bar\">\n          {mode === 'done'\n          ? addExtraInfo(tags, doneDate, index)\n          : (\n            <button\n              className=\"unfavoriteBtn\"\n              data-testid={`${index}-horizontal-favorite-btn`}\n              onClick={() => rmFromFavoriteStorage(id)}\n            />\n            )\n          }\n          <ShareIcon textToCopy={`${window.location.host}/${type}/${id}`} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCardFavDone.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  doneDate: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mode: PropTypes.string,\n};\n\nCardFavDone.defaultProps = {\n  index: null,\n  show: true,\n};\n\nexport default CardFavDone;\n"]},"metadata":{},"sourceType":"module"}