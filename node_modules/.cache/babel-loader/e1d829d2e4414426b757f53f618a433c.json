{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/pages/FoodsPage/index.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Card, CardFilters, Header, Footer, Loading } from '../../components';\nimport { FoodsContext } from '../../contexts/FoodsContext';\nimport { fetchFoodsApi, fetchCategoriesApi, handleFoodsData, handleCategoriesData } from '../../services/APIs/FOODS_API';\n\nconst manageState = (loading, foods, error) => {\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }\n  });\n  if (error.length > 0) return /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"error-foods-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 32\n    }\n  }, \"Something Went Wrong\");\n  if (foods.length === 1) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/comidas/${foods[0].id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 34\n    }\n  });\n  return true;\n};\n\nfunction FoodsPage() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [categorySel, setCategorySel] = useState('all');\n  const [{\n    foods,\n    searchFilter\n  }, {\n    setFoods\n  }] = useContext(FoodsContext);\n  useEffect(() => {\n    fetchFoodsApi(searchFilter).then(({\n      meals\n    }) => setFoods(meals.map(food => handleFoodsData(food)))).then(() => setLoading(false)).catch(err => {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      setError(err);\n    });\n  }, [setFoods, setLoading, searchFilter]);\n  useEffect(() => {\n    fetchCategoriesApi().then(({\n      meals\n    }) => setCategories(meals.map(category => handleCategoriesData(category)))).then(() => setLoading(false)).catch(err => setError(err));\n  }, [setLoading]);\n\n  const filterCategory = () => {\n    if (categorySel !== 'all') return foods.filter(({\n      category\n    }) => category === categorySel);\n    return foods;\n  };\n\n  manageState(loading, foods, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    titleTag: \"Comidas\",\n    isSearchablePage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardFilters, {\n    categories: categories,\n    setCategorySel: value => setCategorySel(value),\n    categorySel: categorySel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), filterCategory().slice(0, 12).map(({\n    id,\n    name,\n    srcImage\n  }, index) => /*#__PURE__*/React.createElement(Link, {\n    to: `/comidas/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    key: id,\n    name: name,\n    index: index,\n    srcImage: srcImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default FoodsPage;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/pages/FoodsPage/index.js"],"names":["React","useEffect","useState","useContext","Link","Redirect","Card","CardFilters","Header","Footer","Loading","FoodsContext","fetchFoodsApi","fetchCategoriesApi","handleFoodsData","handleCategoriesData","manageState","loading","foods","error","length","id","FoodsPage","setLoading","setError","categories","setCategories","categorySel","setCategorySel","searchFilter","setFoods","then","meals","map","food","catch","err","alert","category","filterCategory","filter","value","slice","name","srcImage","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Card, CardFilters, Header, Footer, Loading } from '../../components';\nimport { FoodsContext } from '../../contexts/FoodsContext';\nimport {\n  fetchFoodsApi,\n  fetchCategoriesApi,\n  handleFoodsData,\n  handleCategoriesData,\n} from '../../services/APIs/FOODS_API';\n\nconst manageState = (loading, foods, error) => {\n  if (loading) return <Loading />;\n  if (error.length > 0) return <h1 data-testid=\"error-foods-page\">Something Went Wrong</h1>;\n  if (foods.length === 1) return <Redirect to={`/comidas/${foods[0].id}`} />;\n  return true;\n};\n\nfunction FoodsPage() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [categorySel, setCategorySel] = useState('all');\n  const [{ foods, searchFilter }, { setFoods }] = useContext(FoodsContext);\n\n  useEffect(() => {\n    fetchFoodsApi(searchFilter)\n      .then(({ meals }) => setFoods(meals.map((food) => handleFoodsData(food))))\n      .then(() => setLoading(false))\n      .catch((err) => {\n        alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n        setError(err);\n      });\n  }, [setFoods, setLoading, searchFilter]);\n\n  useEffect(() => {\n    fetchCategoriesApi()\n      .then(({ meals }) => setCategories(meals.map((category) => handleCategoriesData(category))))\n      .then(() => setLoading(false))\n      .catch((err) => setError(err));\n  }, [setLoading]);\n\n  const filterCategory = () => {\n    if (categorySel !== 'all') return foods.filter(({ category }) => category === categorySel);\n    return foods;\n  };\n\n  manageState(loading, foods, error);\n\n  return (\n    <div>\n      <Header titleTag=\"Comidas\" isSearchablePage />\n      <CardFilters\n        categories={categories}\n        setCategorySel={(value) => setCategorySel(value)}\n        categorySel={categorySel}\n      />\n      {filterCategory()\n        .slice(0, 12)\n        .map(({ id, name, srcImage }, index) => (\n          <Link to={`/comidas/${id}`}>\n            <Card key={id} name={name} index={index} srcImage={srcImage} />\n          </Link>\n        ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default FoodsPage;\n"]},"metadata":{},"sourceType":"module"}