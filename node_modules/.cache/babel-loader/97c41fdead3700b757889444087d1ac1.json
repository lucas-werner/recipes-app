{"ast":null,"code":"import _slicedToArray from\"/home/lucaswerner/repositories/github-personal/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import shareIcon from\"../images/shareIcon.svg\";import'./ShareIcon.css';function ShareIcon(_ref){var textToCopy=_ref.textToCopy,index=_ref.index;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),copying=_useState2[0],setCopying=_useState2[1];var enableCopy=useCallback(function(){setCopying(true);},[]);var disableCopy=useCallback(function(){setCopying(false);},[]);useEffect(function(){if(copying){navigator.clipboard.writeText(textToCopy).catch(function(err){return console.log(err);});}},[copying,setCopying]);return/*#__PURE__*/React.createElement(\"button\",{className:\"tooltip hidden-button\",onClick:enableCopy,onMouseOut:disableCopy,\"data-testid\":\"\".concat(index,\"-horizontal-share-btn\")},copying?/*#__PURE__*/React.createElement(\"p\",null,\"Link copiado!\"):/*#__PURE__*/React.createElement(\"img\",{\"data-testid\":\"share-btn\",src:shareIcon,alt:\"click to copy the link\"}),copying||/*#__PURE__*/React.createElement(\"span\",{className:\"tooltiptext\"},\"Copiar Link\"));}export default ShareIcon;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/components/ShareIcon.js"],"names":["React","useState","useEffect","useCallback","ShareIcon","textToCopy","index","copying","setCopying","enableCopy","disableCopy","navigator","clipboard","writeText","catch","err","console","log","shareIcon"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,C,+CAIA,MAAO,iBAAP,CAEA,QAASC,CAAAA,SAAT,MAA0C,IAArBC,CAAAA,UAAqB,MAArBA,UAAqB,CAATC,KAAS,MAATA,KAAS,eACVL,QAAQ,CAAC,KAAD,CADE,wCACjCM,OADiC,eACxBC,UADwB,eAExC,GAAMC,CAAAA,UAAU,CAAGN,WAAW,CAAC,UAAM,CAAEK,UAAU,CAAC,IAAD,CAAV,CAAmB,CAA5B,CAA8B,EAA9B,CAA9B,CACA,GAAME,CAAAA,WAAW,CAAGP,WAAW,CAAC,UAAM,CAAEK,UAAU,CAAC,KAAD,CAAV,CAAoB,CAA7B,CAA+B,EAA/B,CAA/B,CAEAN,SAAS,CAAC,UAAM,CACd,GAAIK,OAAJ,CAAa,CACXI,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BR,UAA9B,EACGS,KADH,CACS,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EADT,EAED,CACF,CALQ,CAKN,CAACR,OAAD,CAAUC,UAAV,CALM,CAAT,CAOA,mBACE,8BACE,SAAS,CAAC,uBADZ,CAEE,OAAO,CAAEC,UAFX,CAGE,UAAU,CAAEC,WAHd,CAIE,wBAAgBJ,KAAhB,yBAJF,EAMGC,OAAO,cACJ,6CADI,cAEJ,2BAAK,cAAY,WAAjB,CAA6B,GAAG,CAAEW,SAAlC,CAA6C,GAAG,CAAC,wBAAjD,EARN,CAUGX,OAAO,eAAI,4BAAM,SAAS,CAAC,aAAhB,gBAVd,CADF,CAcD,CAOD,cAAeH,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport './ShareIcon.css';\n\nfunction ShareIcon({ textToCopy, index }) {\n  const [copying, setCopying] = useState(false);\n  const enableCopy = useCallback(() => { setCopying(true); }, []);\n  const disableCopy = useCallback(() => { setCopying(false); }, []);\n\n  useEffect(() => {\n    if (copying) {\n      navigator.clipboard.writeText(textToCopy)\n        .catch((err) => console.log(err));\n    }\n  }, [copying, setCopying]);\n\n  return (\n    <button\n      className=\"tooltip hidden-button\"\n      onClick={enableCopy}\n      onMouseOut={disableCopy}\n      data-testid={`${index}-horizontal-share-btn`}\n    >\n      {copying\n        ? <p>Link copiado!</p>\n        : <img data-testid=\"share-btn\" src={shareIcon} alt=\"click to copy the link\" />\n      }\n      {copying || <span className=\"tooltiptext\">Copiar Link</span>}\n    </button>\n  );\n}\n\nShareIcon.propTypes = {\n  index: PropTypes.number.isRequired,\n  textToCopy: PropTypes.string.isRequired,\n};\n\nexport default ShareIcon;\n"]},"metadata":{},"sourceType":"module"}