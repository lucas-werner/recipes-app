{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/components/DetailsCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPlayer from 'react-player';\nimport Card from './Card';\nimport Carrosel from './Carrosel';\nimport { handleDrinksData } from '../services/APIs/DRINKS_API';\nimport { handleFoodsData } from '../services/APIs/FOODS_API';\n\nfunction DetailsCard({\n  eat,\n  type\n}) {\n  const [recomends, setRecomends] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    let url = '';\n    if (type === 'food') url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    if (type === 'drink') url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    fetch(url).then(res => res.json()).then(obj => {\n      let arr = [];\n      Object.entries(obj).forEach(([key, value]) => {\n        if (key === 'drinks') arr = value.slice(0, 6).map(drk => handleDrinksData(drk));\n        if (key === 'meals') arr = value.slice(0, 6).map(meal => handleFoodsData(meal));\n      });\n      setRecomends(arr);\n    }).then(() => setLoading(false)).catch(err => {\n      console.log(err);\n      setError(err);\n    });\n  }, [type]);\n  const {\n    id,\n    name,\n    srcImage,\n    video,\n    category,\n    ingredients,\n    instructions,\n    isAlcoholic\n  } = eat;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    key: id,\n    name: name,\n    index: -100,\n    srcImage: srcImage,\n    testid: {\n      title: 'recipe-title',\n      img: 'recipe-photo'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Category: \", category), typeof isAlcoholic === 'boolean' && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 46\n    }\n  }, isAlcoholic ? 'Alcoholic' : 'No Alcoholic'), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, ingredients.map(({\n    ingredient,\n    measure\n  }, index) => /*#__PURE__*/React.createElement(\"li\", {\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    key: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, ingredient, \" \", measure))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, instructions), video && /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 42\n    }\n  })), error.length > 0 && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 28\n    }\n  }, \"Aconteceu algo errado em detalhes de comida\"), !error && loading && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Carrgando detalhes de comida...\"), !error && !loading && recomends && /*#__PURE__*/React.createElement(Carrosel, {\n    cards: recomends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 43\n    }\n  }));\n}\n\nDetailsCard.propTypes = {\n  eat: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    // number as string\n    name: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    instructions: PropTypes.string.isRequired,\n    origin: PropTypes.string.isRequired,\n    srcImage: PropTypes.string.isRequired,\n    video: PropTypes.string.isRequired,\n    source: PropTypes.string.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired).isRequired).isRequired,\n    isAlcoholic: PropTypes.bool\n  }).isRequired,\n  type: PropTypes.oneOf(['food', 'drink']).isRequired\n};\nexport default DetailsCard;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/components/DetailsCard.js"],"names":["React","useState","useEffect","PropTypes","ReactPlayer","Card","Carrosel","handleDrinksData","handleFoodsData","DetailsCard","eat","type","recomends","setRecomends","loading","setLoading","error","setError","url","fetch","then","res","json","obj","arr","Object","entries","forEach","key","value","slice","map","drk","meal","catch","err","console","log","id","name","srcImage","video","category","ingredients","instructions","isAlcoholic","title","img","ingredient","measure","index","length","propTypes","shape","string","isRequired","origin","source","arrayOf","objectOf","bool","oneOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPlayer from 'react-player';\n\nimport Card from './Card';\nimport Carrosel from './Carrosel';\n\nimport { handleDrinksData } from '../services/APIs/DRINKS_API';\nimport { handleFoodsData } from '../services/APIs/FOODS_API';\n\nfunction DetailsCard({ eat, type }) {\n  const [recomends, setRecomends] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    let url = '';\n    if (type === 'food') url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    if (type === 'drink') url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\n    fetch(url).then((res) => res.json())\n      .then((obj) => {\n        let arr = [];\n        Object.entries(obj).forEach(([key, value]) => {\n          if (key === 'drinks') arr = value.slice(0, 6).map((drk) => handleDrinksData(drk));\n          if (key === 'meals') arr = value.slice(0, 6).map((meal) => handleFoodsData(meal));\n        });\n        setRecomends(arr);\n      }).then(() => setLoading(false))\n      .catch((err) => { console.log(err); setError(err); });\n  }, [type]);\n\n  const { id, name, srcImage, video, category, ingredients, instructions, isAlcoholic } = eat;\n\n  return (\n    <div>\n      <Card\n        key={id}\n        name={name}\n        index={-100}\n        srcImage={srcImage}\n        testid={{ title: 'recipe-title', img: 'recipe-photo' }}\n      />\n      <p data-testid=\"recipe-category\">Category: {category}</p>\n      {(typeof isAlcoholic === 'boolean') && <p>{isAlcoholic ? 'Alcoholic' : 'No Alcoholic'}</p>}\n      <ul>\n        {ingredients.map(({ ingredient, measure }, index) => (\n          <li data-testid={`${index}-ingredient-name-and-measure`} key={ingredient}>\n            {ingredient} {measure}\n          </li>\n        ))}\n      </ul>\n      <p data-testid=\"instructions\">{instructions}</p>\n      {video && <div data-testid=\"video\"><ReactPlayer url={video} /></div>}\n      {error.length > 0 && <h3>Aconteceu algo errado em detalhes de comida</h3>}\n      {!error && loading && <h3>Carrgando detalhes de comida...</h3>}\n      {!error && !loading && recomends && <Carrosel cards={recomends} />}\n    </div>\n  );\n}\n\nDetailsCard.propTypes = {\n  eat: PropTypes.shape({\n    id: PropTypes.string.isRequired, // number as string\n    name: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    instructions: PropTypes.string.isRequired,\n    origin: PropTypes.string.isRequired,\n    srcImage: PropTypes.string.isRequired,\n    video: PropTypes.string.isRequired,\n    source: PropTypes.string.isRequired,\n    ingredients: PropTypes.arrayOf(\n      PropTypes.objectOf(\n        PropTypes.string.isRequired,\n      ).isRequired,\n    ).isRequired,\n    isAlcoholic: PropTypes.bool,\n  }).isRequired,\n  type: PropTypes.oneOf(['food', 'drink']).isRequired,\n};\n\nexport default DetailsCard;\n"]},"metadata":{},"sourceType":"module"}