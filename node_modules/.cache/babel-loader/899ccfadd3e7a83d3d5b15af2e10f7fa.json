{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/pages/ExploreFoodIngredientsPage/index.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Card, Header, Footer, Loading } from \"../../components\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { FoodsContext } from \"../../contexts/FoodsContext\";\nimport { fetchFoodsApi } from \"../../services/APIs/FOODS_API\";\n\nconst handleRedirect = (name, setFoodFilter, setRedirect) => {\n  const search = `filter.php?i=${name}`;\n  setFoodFilter(search);\n  return setRedirect(true);\n};\n\nfunction ExploreFoodIngredientsPage() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [{\n    foodFilter\n  }, {\n    setFoodFilter\n  }] = useContext(FoodsContext);\n  useEffect(() => {\n    fetchFoodsApi(\"list.php?i=list\").then(({\n      meals\n    }) => meals.map(({\n      strIngredient: ingredient\n    }) => ({\n      name: ingredient,\n      srcImage: `https://www.themealdb.com/images/ingredients/${ingredient}-Small.png`\n    }))).then(arr => {\n      setIngredients(arr);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    });\n  }, [setLoading]);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  });\n  if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/comidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    titleTag: \"Explorar Ingredientes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), ingredients.slice(0, 12).map(({\n    name,\n    srcImage\n  }, index) => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRedirect(name, setFoodFilter, setRedirect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    name: name,\n    index: index,\n    srcImage: srcImage,\n    testid: {\n      title: `${index}-ingredient-card`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExploreFoodIngredientsPage;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/pages/ExploreFoodIngredientsPage/index.js"],"names":["React","useEffect","useState","useContext","Card","Header","Footer","Loading","Link","Redirect","FoodsContext","fetchFoodsApi","handleRedirect","name","setFoodFilter","setRedirect","search","ExploreFoodIngredientsPage","loading","setLoading","error","setError","ingredients","setIngredients","redirect","foodFilter","then","meals","map","strIngredient","ingredient","srcImage","arr","catch","err","console","log","slice","index","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Card, Header, Footer, Loading } from \"../../components\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { FoodsContext } from \"../../contexts/FoodsContext\";\nimport { fetchFoodsApi } from \"../../services/APIs/FOODS_API\";\n\nconst handleRedirect = (name, setFoodFilter, setRedirect) => {\n  const search = `filter.php?i=${name}`;\n  setFoodFilter(search);\n  return setRedirect(true)\n};\n\nfunction ExploreFoodIngredientsPage() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [{ foodFilter }, { setFoodFilter }] = useContext(FoodsContext);\n\n  useEffect(() => {\n    fetchFoodsApi(\"list.php?i=list\")\n      .then(({ meals }) =>\n        meals.map(({ strIngredient: ingredient }) => ({\n          name: ingredient,\n          srcImage: `https://www.themealdb.com/images/ingredients/${ingredient}-Small.png`,\n        })),\n      )\n      .then((arr) => {\n        setIngredients(arr);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(err);\n      });\n  }, [setLoading]);\n\n  if (loading) return <Loading />;\n  if (redirect) return <Redirect to=\"/comidas\" />\n  return (    \n    <div>\n      <Header titleTag=\"Explorar Ingredientes\" />\n      {ingredients.slice(0, 12).map(({ name, srcImage }, index) => (\n        <button onClick={handleRedirect(name, setFoodFilter, setRedirect)}>\n          <Card\n            name={name}\n            index={index}\n            srcImage={srcImage}\n            testid={{ title: `${index}-ingredient-card` }}\n          />\n        </button>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodIngredientsPage;\n"]},"metadata":{},"sourceType":"module"}