{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/components/DetailsCard.js\";\nimport React, { useContext, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPlayer from 'react-player';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport { getInProgress, doneRecipes } from '../services/APIs/APIlocalStorage';\nimport ActionsBar from './ActionsBar';\nimport { FoodsContext } from '../contexts/FoodsContext';\n\nfunction StoreRecipe(id, ingredients, type) {\n  const newStorage = { ...getInProgress(),\n    [type === 'food' ? 'meals' : 'cocktails']: { ...getInProgress(type),\n      [id]: ingredients\n    }\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n}\n\nfunction DetailsCard({\n  eat,\n  type\n}) {\n  const [, {\n    setFoodInproggress\n  }] = useContext(FoodsContext);\n  const {\n    id,\n    name,\n    srcImage,\n    video,\n    category,\n    ingredients,\n    instructions,\n    isAlcoholic\n  } = eat;\n  const startRecipe = useCallback(() => {\n    setFoodInproggress(eat);\n    StoreRecipe(eat.id, eat.ingredients, type);\n  }, [eat, type, setFoodInproggress]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    key: id,\n    name: name,\n    srcImage: srcImage,\n    testid: {\n      title: 'recipe-title',\n      img: 'recipe-photo'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ActionsBar, {\n    eat: eat,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, isAlcoholic || category), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, ingredients.map(({\n    ingredient,\n    measure\n  }, index) => /*#__PURE__*/React.createElement(\"li\", {\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    key: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, ingredient, \" \", measure))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, instructions), video && /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 42\n    }\n  })), Boolean(doneRecipes(id)) || /*#__PURE__*/React.createElement(Link, {\n    to: `${type === 'food' ? '/comidas' : '/bebidas'}/${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"start-recipe-btn\",\n    className: \"buttonIniciar\",\n    onClick: startRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, getInProgress(type)[id] ? 'Continuar Receita' : 'Iniciar Receita')));\n}\n\nDetailsCard.propTypes = {\n  eat: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    // number as string\n    name: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    instructions: PropTypes.string.isRequired,\n    origin: PropTypes.string,\n    srcImage: PropTypes.string.isRequired,\n    video: PropTypes.string,\n    source: PropTypes.string,\n    ingredients: PropTypes.arrayOf(PropTypes.shape({\n      ingredient: PropTypes.string.isRequired,\n      measure: PropTypes.string\n    }).isRequired).isRequired,\n    isAlcoholic: PropTypes.string\n  }).isRequired,\n  type: PropTypes.oneOf(['food', 'drink']).isRequired\n};\nDetailsCard.defaultProps = {\n  eat: {\n    source: null,\n    isAlcoholic: null,\n    origin: '',\n    video: ''\n  }\n};\nexport default DetailsCard;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/components/DetailsCard.js"],"names":["React","useContext","useCallback","PropTypes","ReactPlayer","Link","Card","getInProgress","doneRecipes","ActionsBar","FoodsContext","StoreRecipe","id","ingredients","type","newStorage","localStorage","setItem","JSON","stringify","DetailsCard","eat","setFoodInproggress","name","srcImage","video","category","instructions","isAlcoholic","startRecipe","title","img","map","ingredient","measure","index","Boolean","propTypes","shape","string","isRequired","origin","source","arrayOf","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { useContext, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPlayer from 'react-player';\nimport { Link } from 'react-router-dom';\n\nimport Card from './Card';\n\nimport { getInProgress, doneRecipes } from '../services/APIs/APIlocalStorage';\n\nimport ActionsBar from './ActionsBar';\n\nimport { FoodsContext } from '../contexts/FoodsContext';\n\nfunction StoreRecipe(id, ingredients, type) {\n  const newStorage = {\n    ...getInProgress(),\n    [type === 'food' ? 'meals' : 'cocktails']: { ...getInProgress(type), [id]: ingredients },\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newStorage));\n}\n\nfunction DetailsCard({ eat, type }) {\n  const [, { setFoodInproggress }] = useContext(FoodsContext);\n  const { id, name, srcImage, video, category, ingredients, instructions, isAlcoholic } = eat;\n\n  const startRecipe = useCallback(() => {\n    setFoodInproggress(eat);\n    StoreRecipe(eat.id, eat.ingredients, type);\n  }, [eat, type, setFoodInproggress]);\n\n  return (\n    <div>\n      <Card\n        key={id}\n        name={name}\n        srcImage={srcImage}\n        testid={{ title: 'recipe-title', img: 'recipe-photo' }}\n      />\n      <ActionsBar eat={eat} type={type} />\n      <p data-testid=\"recipe-category\">{isAlcoholic || category}</p>\n      <ul>\n        {ingredients.map(({ ingredient, measure }, index) => (\n          <li data-testid={`${index}-ingredient-name-and-measure`} key={ingredient}>\n            {ingredient} {measure}\n          </li>\n        ))}\n      </ul>\n      <p data-testid=\"instructions\">{instructions}</p>\n      {video && <div data-testid=\"video\"><ReactPlayer url={video} /></div>}\n      {Boolean(doneRecipes(id)) ||\n        <Link to={`${type === 'food' ? '/comidas' : '/bebidas'}/${id}/in-progress`}>\n          <button\n            data-testid=\"start-recipe-btn\"\n            className=\"buttonIniciar\"\n            onClick={startRecipe}\n          >{getInProgress(type)[id] ? 'Continuar Receita' : 'Iniciar Receita'}</button>\n        </Link>\n      }\n    </div>\n  );\n}\n\nDetailsCard.propTypes = {\n  eat: PropTypes.shape({\n    id: PropTypes.string.isRequired, // number as string\n    name: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    instructions: PropTypes.string.isRequired,\n    origin: PropTypes.string,\n    srcImage: PropTypes.string.isRequired,\n    video: PropTypes.string,\n    source: PropTypes.string,\n    ingredients: PropTypes.arrayOf(\n      PropTypes.shape({\n        ingredient: PropTypes.string.isRequired,\n        measure: PropTypes.string,\n      }).isRequired,\n    ).isRequired,\n    isAlcoholic: PropTypes.string,\n  }).isRequired,\n  type: PropTypes.oneOf(['food', 'drink']).isRequired,\n};\n\nDetailsCard.defaultProps = {\n  eat: { source: null, isAlcoholic: null, origin: '', video: '' },\n};\n\nexport default DetailsCard;\n"]},"metadata":{},"sourceType":"module"}