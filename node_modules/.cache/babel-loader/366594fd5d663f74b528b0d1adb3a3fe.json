{"ast":null,"code":"import _slicedToArray from\"/home/lucaswerner/repositories/github-personal/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import{eatShape,typeShape}from'../services/APIs/shapes';import whiteHeart from\"../images/whiteHeartIcon.svg\";import blackHeart from\"../images/blackHeartIcon.svg\";import'./FavoriteIcon.css';import{sendToFavoriteStorage,rmFromFavoriteStorage,getFavStorage}from'../services/APIs/APIlocalStorage';function FavoriteIcon(_ref){var recipe=_ref.recipe,type=_ref.type;var _useState=useState(getFavStorage().some(function(favorite){return Number(favorite.id)===Number(recipe.id);})),_useState2=_slicedToArray(_useState,2),isFavorite=_useState2[0],setIsFavorite=_useState2[1];var handleFavoriteStorage=useCallback(function(isToSend){if(isToSend)return sendToFavoriteStorage(recipe,type);return rmFromFavoriteStorage(recipe.id);},[type,recipe]);var toggleFavorite=useCallback(function(){setIsFavorite(!isFavorite);},[isFavorite,setIsFavorite]);useEffect(function(){handleFavoriteStorage(isFavorite);},[isFavorite,handleFavoriteStorage]);var src=isFavorite?blackHeart:whiteHeart;var alt=\"Item is \".concat(isFavorite?'':'not',\" favorited\");return/*#__PURE__*/React.createElement(\"button\",{className:\"hidden-button\",onClick:toggleFavorite},/*#__PURE__*/React.createElement(\"img\",{alt:alt,\"data-testid\":\"favorite-btn\",src:src}));}export default FavoriteIcon;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/components/FavoriteIcon.js"],"names":["React","useState","useEffect","useCallback","eatShape","typeShape","sendToFavoriteStorage","rmFromFavoriteStorage","getFavStorage","FavoriteIcon","recipe","type","some","favorite","Number","id","isFavorite","setIsFavorite","handleFavoriteStorage","isToSend","toggleFavorite","src","blackHeart","whiteHeart","alt"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,CAGA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,yBAApC,C,0GAIA,MAAO,oBAAP,CACA,OACEC,qBADF,CAEEC,qBAFF,CAGEC,aAHF,KAIO,kCAJP,CAMA,QAASC,CAAAA,YAAT,MAAwC,IAAhBC,CAAAA,MAAgB,MAAhBA,MAAgB,CAARC,IAAQ,MAARA,IAAQ,eACFV,QAAQ,CAC1CO,aAAa,GAAGI,IAAhB,CAAqB,SAACC,QAAD,QAAcC,CAAAA,MAAM,CAACD,QAAQ,CAACE,EAAV,CAAN,GAAwBD,MAAM,CAACJ,MAAM,CAACK,EAAR,CAA5C,EAArB,CAD0C,CADN,wCAC/BC,UAD+B,eACnBC,aADmB,eAKtC,GAAMC,CAAAA,qBAAqB,CAAGf,WAAW,CAAC,SAACgB,QAAD,CAAc,CACtD,GAAIA,QAAJ,CAAc,MAAOb,CAAAA,qBAAqB,CAACI,MAAD,CAASC,IAAT,CAA5B,CACd,MAAOJ,CAAAA,qBAAqB,CAACG,MAAM,CAACK,EAAR,CAA5B,CACD,CAHwC,CAGtC,CAACJ,IAAD,CAAOD,MAAP,CAHsC,CAAzC,CAKA,GAAMU,CAAAA,cAAc,CAAGjB,WAAW,CAAC,UAAM,CACvCc,aAAa,CAAC,CAACD,UAAF,CAAb,CACD,CAFiC,CAE/B,CAACA,UAAD,CAAaC,aAAb,CAF+B,CAAlC,CAIAf,SAAS,CAAC,UAAM,CAAEgB,qBAAqB,CAACF,UAAD,CAArB,CAAoC,CAA7C,CAA+C,CAACA,UAAD,CAAaE,qBAAb,CAA/C,CAAT,CAEA,GAAMG,CAAAA,GAAG,CAAGL,UAAU,CAAGM,UAAH,CAAgBC,UAAtC,CACA,GAAMC,CAAAA,GAAG,mBAAcR,UAAU,CAAG,EAAH,CAAQ,KAAhC,cAAT,CAEA,mBACE,8BAAQ,SAAS,CAAC,eAAlB,CAAkC,OAAO,CAAEI,cAA3C,eACE,2BACE,GAAG,CAAEI,GADP,CAEE,cAAY,cAFd,CAGE,GAAG,CAAEH,GAHP,EADF,CADF,CASD,CAOD,cAAeZ,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { eatShape, typeShape } from '../services/APIs/shapes';\n\nimport whiteHeart from '../images/whiteHeartIcon.svg';\nimport blackHeart from '../images/blackHeartIcon.svg';\nimport './FavoriteIcon.css';\nimport {\n  sendToFavoriteStorage,\n  rmFromFavoriteStorage,\n  getFavStorage,\n} from '../services/APIs/APIlocalStorage';\n\nfunction FavoriteIcon({ recipe, type }) {\n  const [isFavorite, setIsFavorite] = useState(\n    getFavStorage().some((favorite) => Number(favorite.id) === Number(recipe.id)),\n  );\n\n  const handleFavoriteStorage = useCallback((isToSend) => {\n    if (isToSend) return sendToFavoriteStorage(recipe, type);\n    return rmFromFavoriteStorage(recipe.id);\n  }, [type, recipe]);\n\n  const toggleFavorite = useCallback(() => {\n    setIsFavorite(!isFavorite);\n  }, [isFavorite, setIsFavorite]);\n\n  useEffect(() => { handleFavoriteStorage(isFavorite); }, [isFavorite, handleFavoriteStorage]);\n\n  const src = isFavorite ? blackHeart : whiteHeart;\n  const alt = `Item is ${isFavorite ? '' : 'not'} favorited`;\n\n  return (\n    <button className=\"hidden-button\" onClick={toggleFavorite}>\n      <img\n        alt={alt}\n        data-testid=\"favorite-btn\"\n        src={src}\n      />\n    </button>\n  );\n}\n\nFavoriteIcon.propTypes = {\n  recipe: PropTypes.shape(eatShape).isRequired,\n  type: typeShape.isRequired,\n};\n\nexport default FavoriteIcon;\n"]},"metadata":{},"sourceType":"module"}