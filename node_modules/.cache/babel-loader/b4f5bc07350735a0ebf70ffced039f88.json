{"ast":null,"code":"import _slicedToArray from\"/home/lucaswerner/repositories/github-personal/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext}from'react';import{Link,Redirect}from'react-router-dom';import{Card,CardFilters,Header,Footer,Loading}from'../../components';import{DrinksContext}from'../../contexts/DrinksContext';import{fetchDrinkApi,handleDrinksData}from'../../services/APIs/DRINKS_API';var manageState=function manageState(loading,drinks,error){if(loading)return/*#__PURE__*/React.createElement(Loading,null);if(error.length>0)return/*#__PURE__*/React.createElement(\"h1\",{\"data-testid\":\"error-drinks-page\"},\"Something Went Wrong\");if(drinks.length===1)return/*#__PURE__*/React.createElement(Redirect,{to:\"/bebidas/\".concat(drinks[0].id)});return false;};function DrinksPage(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),categories=_useState6[0],setCategories=_useState6[1];var _useContext=useContext(DrinksContext),_useContext2=_slicedToArray(_useContext,2),_useContext2$=_useContext2[0],drinks=_useContext2$.drinks,drinkFilter=_useContext2$.drinkFilter,_useContext2$2=_useContext2[1],setDrinks=_useContext2$2.setDrinks,setDrinkFilter=_useContext2$2.setDrinkFilter;useEffect(function(){fetchDrinkApi(drinkFilter).then(function(_ref){var drk=_ref.drinks;return setDrinks(drk.map(function(drink){return handleDrinksData(drink);}));}).then(function(){return setLoading(false);}).catch(function(err){alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');setError(err);});},[setDrinks,setLoading,drinkFilter]);useEffect(function(){fetchDrinkApi('list.php?c=list').then(function(_ref2){var drks=_ref2.drinks;return setCategories(drks.map(function(_ref3){var category=_ref3.strCategory;return{category:category};}));}).then(function(){return setLoading(false);}).catch(function(err){console.log(err);setError(err);});},[setLoading]);return manageState(loading,drinks,error)||/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,{titleTag:\"Bebidas\",filterMode:setDrinkFilter}),/*#__PURE__*/React.createElement(CardFilters,{categories:categories,filterMode:setDrinkFilter}),drinks.slice(0,12).map(function(_ref4,index){var id=_ref4.id,name=_ref4.name,srcImage=_ref4.srcImage;return/*#__PURE__*/React.createElement(Link,{key:id,to:\"/bebidas/\".concat(id)},/*#__PURE__*/React.createElement(Card,{name:name,index:index,srcImage:srcImage}));}),/*#__PURE__*/React.createElement(Footer,null));}export default DrinksPage;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/pages/DrinksPage/index.js"],"names":["React","useEffect","useState","useContext","Link","Redirect","Card","CardFilters","Header","Footer","Loading","DrinksContext","fetchDrinkApi","handleDrinksData","manageState","loading","drinks","error","length","id","DrinksPage","setLoading","setError","categories","setCategories","drinkFilter","setDrinks","setDrinkFilter","then","drk","map","drink","catch","err","alert","drks","category","strCategory","console","log","slice","index","name","srcImage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Card, CardFilters, Header, Footer, Loading } from '../../components';\nimport { DrinksContext } from '../../contexts/DrinksContext';\nimport { fetchDrinkApi, handleDrinksData } from '../../services/APIs/DRINKS_API';\n\nconst manageState = (loading, drinks, error) => {\n  if (loading) return <Loading />;\n  if (error.length > 0) return <h1 data-testid=\"error-drinks-page\">Something Went Wrong</h1>;\n  if (drinks.length === 1) return <Redirect to={`/bebidas/${drinks[0].id}`} />;\n  return false;\n};\n\nfunction DrinksPage() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [{ drinks, drinkFilter }, { setDrinks, setDrinkFilter }] = useContext(DrinksContext);\n\n  useEffect(() => {\n    fetchDrinkApi(drinkFilter)\n      .then(({ drinks: drk }) => setDrinks(drk.map((drink) => handleDrinksData(drink))))\n      .then(() => setLoading(false))\n      .catch((err) => {\n        alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n        setError(err);\n      });\n  }, [setDrinks, setLoading, drinkFilter]);\n\n  useEffect(() => {\n    fetchDrinkApi('list.php?c=list')\n      .then(({ drinks: drks }) =>\n        setCategories(drks.map(({ strCategory: category }) => ({ category }))),\n      )\n      .then(() => setLoading(false))\n      .catch((err) => {\n        console.log(err);\n        setError(err);\n      });\n  }, [setLoading]);\n\n  return (\n    manageState(loading, drinks, error) || (\n      <div>\n        <Header titleTag=\"Bebidas\" filterMode={setDrinkFilter} />\n        <CardFilters categories={categories} filterMode={setDrinkFilter} />\n        {drinks.slice(0, 12).map(({ id, name, srcImage }, index) => (\n          <Link key={id} to={`/bebidas/${id}`}>\n            <Card name={name} index={index} srcImage={srcImage} />\n          </Link>\n        ))}\n        <Footer />\n      </div>\n    )\n  );\n}\n\nexport default DrinksPage;\n"]},"metadata":{},"sourceType":"module"}