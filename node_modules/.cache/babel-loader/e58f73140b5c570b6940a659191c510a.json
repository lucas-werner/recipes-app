{"ast":null,"code":"import _slicedToArray from\"/home/lucaswerner/repositories/github-personal/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';var useRequisition=function useRequisition(requisition){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];useEffect(function(){if(loading&&!error){requisition().then(function(){return setLoading(false);}).catch(function(err){console.log(err);setError(err);}).catch(function(){return setLoading(false);});}},[loading,error,requisition]);return[{loading:loading,error:error},{setLoading:setLoading,setError:setError}];};export default useRequisition;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/hooks/requisition.js"],"names":["useEffect","useState","useRequisition","requisition","loading","setLoading","error","setError","then","catch","err","console","log"],"mappings":"iLAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,WAAD,CAAiB,eACRF,QAAQ,CAAC,IAAD,CADA,wCAC/BG,OAD+B,eACtBC,UADsB,8BAEZJ,QAAQ,CAAC,EAAD,CAFI,yCAE/BK,KAF+B,eAExBC,QAFwB,eAItCP,SAAS,CAAC,UAAM,CACd,GAAII,OAAO,EAAI,CAACE,KAAhB,CAAuB,CACrBH,WAAW,GACVK,IADD,CACM,iBAAMH,CAAAA,UAAU,CAAC,KAAD,CAAhB,EADN,EAECI,KAFD,CAEO,SAACC,GAAD,CAAS,CAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAkBH,QAAQ,CAACG,GAAD,CAAR,CAAgB,CAFpD,EAGCD,KAHD,CAGO,iBAAMJ,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAHP,EAID,CACF,CAPQ,CAON,CAACD,OAAD,CAAUE,KAAV,CAAiBH,WAAjB,CAPM,CAAT,CASA,MAAO,CAAC,CAAEC,OAAO,CAAPA,OAAF,CAAWE,KAAK,CAALA,KAAX,CAAD,CAAqB,CAAED,UAAU,CAAVA,UAAF,CAAcE,QAAQ,CAARA,QAAd,CAArB,CAAP,CACD,CAdD,CAgBA,cAAeL,CAAAA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useRequisition = (requisition) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (loading && !error) {\n      requisition()\n      .then(() => setLoading(false))\n      .catch((err) => { console.log(err); setError(err); })\n      .catch(() => setLoading(false));\n    }\n  }, [loading, error, requisition]);\n\n  return [{ loading, error }, { setLoading, setError }];\n};\n\nexport default useRequisition;\n"]},"metadata":{},"sourceType":"module"}