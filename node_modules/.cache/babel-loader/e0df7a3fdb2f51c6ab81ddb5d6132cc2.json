{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/github-personal/recipes-app/src/components/FavoriteIcon.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { eatShape, typeShape } from '../services/APIs/shapes';\nimport whiteHeart from \"../images/whiteHeartIcon.svg\";\nimport blackHeart from \"../images/blackHeartIcon.svg\";\nimport './FavoriteIcon.css';\nimport { sendToFavoriteStorage, rmFromFavoriteStorage, getFavStorage } from '../services/APIs/APIlocalStorage';\n\nfunction FavoriteIcon({\n  recipe,\n  type\n}) {\n  const [isFavorite, setIsFavorite] = useState(getFavStorage().some(favorite => Number(favorite.id) === Number(recipe.id)));\n  const handleFavoriteStorage = useCallback(isToSend => {\n    if (isToSend) return sendToFavoriteStorage(recipe, type);\n    return rmFromFavoriteStorage(recipe.id);\n  }, [type, recipe]);\n  const toggleFavorite = useCallback(() => {\n    setIsFavorite(!isFavorite);\n  }, [isFavorite, setIsFavorite]);\n  useEffect(() => {\n    handleFavoriteStorage(isFavorite);\n  }, [isFavorite, handleFavoriteStorage]);\n  const src = isFavorite ? blackHeart : whiteHeart;\n  const alt = `Item is ${isFavorite ? '' : 'not'} favorited`;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"hidden-button\",\n    onClick: toggleFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: alt,\n    \"data-testid\": \"favorite-btn\",\n    src: src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nFavoriteIcon.propTypes = {\n  recipe: PropTypes.shape(eatShape).isRequired,\n  type: typeShape.isRequired\n};\nexport default FavoriteIcon;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/components/FavoriteIcon.js"],"names":["React","useState","useEffect","useCallback","PropTypes","eatShape","typeShape","sendToFavoriteStorage","rmFromFavoriteStorage","getFavStorage","FavoriteIcon","recipe","type","isFavorite","setIsFavorite","some","favorite","Number","id","handleFavoriteStorage","isToSend","toggleFavorite","src","blackHeart","whiteHeart","alt","propTypes","shape","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,yBAApC;;;AAIA,OAAO,oBAAP;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,aAHF,QAIO,kCAJP;;AAMA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAtB,EAAwC;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAC1CQ,aAAa,GAAGM,IAAhB,CAAsBC,QAAD,IAAcC,MAAM,CAACD,QAAQ,CAACE,EAAV,CAAN,KAAwBD,MAAM,CAACN,MAAM,CAACO,EAAR,CAAjE,CAD0C,CAA5C;AAIA,QAAMC,qBAAqB,GAAGhB,WAAW,CAAEiB,QAAD,IAAc;AACtD,QAAIA,QAAJ,EAAc,OAAOb,qBAAqB,CAACI,MAAD,EAASC,IAAT,CAA5B;AACd,WAAOJ,qBAAqB,CAACG,MAAM,CAACO,EAAR,CAA5B;AACD,GAHwC,EAGtC,CAACN,IAAD,EAAOD,MAAP,CAHsC,CAAzC;AAKA,QAAMU,cAAc,GAAGlB,WAAW,CAAC,MAAM;AACvCW,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFiC,EAE/B,CAACA,UAAD,EAAaC,aAAb,CAF+B,CAAlC;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AAAEiB,IAAAA,qBAAqB,CAACN,UAAD,CAArB;AAAoC,GAA7C,EAA+C,CAACA,UAAD,EAAaM,qBAAb,CAA/C,CAAT;AAEA,QAAMG,GAAG,GAAGT,UAAU,GAAGU,UAAH,GAAgBC,UAAtC;AACA,QAAMC,GAAG,GAAI,WAAUZ,UAAU,GAAG,EAAH,GAAQ,KAAM,YAA/C;AAEA,sBACE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEQ,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEI,GADP;AAEE,mBAAY,cAFd;AAGE,IAAA,GAAG,EAAEH,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD;;AAEDZ,YAAY,CAACgB,SAAb,GAAyB;AACvBf,EAAAA,MAAM,EAAEP,SAAS,CAACuB,KAAV,CAAgBtB,QAAhB,EAA0BuB,UADX;AAEvBhB,EAAAA,IAAI,EAAEN,SAAS,CAACsB;AAFO,CAAzB;AAKA,eAAelB,YAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { eatShape, typeShape } from '../services/APIs/shapes';\n\nimport whiteHeart from '../images/whiteHeartIcon.svg';\nimport blackHeart from '../images/blackHeartIcon.svg';\nimport './FavoriteIcon.css';\nimport {\n  sendToFavoriteStorage,\n  rmFromFavoriteStorage,\n  getFavStorage,\n} from '../services/APIs/APIlocalStorage';\n\nfunction FavoriteIcon({ recipe, type }) {\n  const [isFavorite, setIsFavorite] = useState(\n    getFavStorage().some((favorite) => Number(favorite.id) === Number(recipe.id)),\n  );\n\n  const handleFavoriteStorage = useCallback((isToSend) => {\n    if (isToSend) return sendToFavoriteStorage(recipe, type);\n    return rmFromFavoriteStorage(recipe.id);\n  }, [type, recipe]);\n\n  const toggleFavorite = useCallback(() => {\n    setIsFavorite(!isFavorite);\n  }, [isFavorite, setIsFavorite]);\n\n  useEffect(() => { handleFavoriteStorage(isFavorite); }, [isFavorite, handleFavoriteStorage]);\n\n  const src = isFavorite ? blackHeart : whiteHeart;\n  const alt = `Item is ${isFavorite ? '' : 'not'} favorited`;\n\n  return (\n    <button className=\"hidden-button\" onClick={toggleFavorite}>\n      <img\n        alt={alt}\n        data-testid=\"favorite-btn\"\n        src={src}\n      />\n    </button>\n  );\n}\n\nFavoriteIcon.propTypes = {\n  recipe: PropTypes.shape(eatShape).isRequired,\n  type: typeShape.isRequired,\n};\n\nexport default FavoriteIcon;\n"]},"metadata":{},"sourceType":"module"}