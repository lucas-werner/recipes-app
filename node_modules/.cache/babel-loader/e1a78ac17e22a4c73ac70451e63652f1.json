{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/components/ActionsBar.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport whiteHeart from \"../images/whiteHeartIcon.svg\";\nimport blackHeart from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport './ActionsBar.css';\n\nfunction ActionsBar({\n  handleFavorite,\n  isFavInit = false\n}) {\n  const [isFav, setIsFav] = useState(isFavInit);\n  const [coping, setCoping] = useState(false);\n  const inverteIsFavorite = useCallback(() => {\n    setIsFav(!isFav);\n  }, [isFav]);\n  const enableCopy = useCallback(() => {\n    setCoping(true);\n  }, []);\n  const disableCopy = useCallback(() => {\n    setCoping(false);\n  }, []);\n  useEffect(() => {\n    if (coping) {\n      navigator.clipboard.writeText(window.location.href).then(() => console.log('succes copy')).catch(err => console.log(err));\n    }\n  }, [coping, setCoping]);\n  useEffect(() => {\n    handleFavorite(isFav);\n  }, [isFav, handleFavorite]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"hidden-button\",\n    onClick: inverteIsFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, isFav ? /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: blackHeart,\n    alt: \"is amazing favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: whiteHeart,\n    alt: \"is not favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"tooltip hidden-button\",\n    onClick: enableCopy,\n    onMouseOut: disableCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, coping ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Link copiado!\") : /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"click to copy the link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), coping || /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tooltiptext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 20\n    }\n  }, \"Copiar Link\")));\n}\n\nActionsBar.propTypes = {\n  handleFavorite: PropTypes.func.isRequired,\n  isFavInit: PropTypes.bool.isRequired\n};\nexport default ActionsBar;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/components/ActionsBar.js"],"names":["React","useState","useEffect","useCallback","PropTypes","ActionsBar","handleFavorite","isFavInit","isFav","setIsFav","coping","setCoping","inverteIsFavorite","enableCopy","disableCopy","navigator","clipboard","writeText","window","location","href","then","console","log","catch","err","blackHeart","whiteHeart","shareIcon","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAKA,OAAO,kBAAP;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,SAAS,GAAG;AAA9B,CAApB,EAA2D;AACzD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,SAAD,CAAlC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMW,iBAAiB,GAAGT,WAAW,CAAC,MAAM;AAAEM,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AAAmB,GAA5B,EAA8B,CAACA,KAAD,CAA9B,CAArC;AACA,QAAMK,UAAU,GAAGV,WAAW,CAAC,MAAM;AAAEQ,IAAAA,SAAS,CAAC,IAAD,CAAT;AAAkB,GAA3B,EAA6B,EAA7B,CAA9B;AACA,QAAMG,WAAW,GAAGX,WAAW,CAAC,MAAM;AAAEQ,IAAAA,SAAS,CAAC,KAAD,CAAT;AAAmB,GAA5B,EAA8B,EAA9B,CAA/B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAJ,EAAY;AACVK,MAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BC,MAAM,CAACC,QAAP,CAAgBC,IAA9C,EACGC,IADH,CACQ,MAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CADd,EAEGC,KAFH,CAEUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFlB;AAGD;AACF,GANQ,EAMN,CAACf,MAAD,EAASC,SAAT,CANM,CAAT;AAQAT,EAAAA,SAAS,CAAC,MAAM;AAAEI,IAAAA,cAAc,CAACE,KAAD,CAAd;AAAwB,GAAjC,EAAmC,CAACA,KAAD,EAAQF,cAAR,CAAnC,CAAT;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEM,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,gBACF;AAAK,mBAAY,cAAjB;AAAgC,IAAA,GAAG,EAAEkB,UAArC;AAAiD,IAAA,GAAG,EAAC,qBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,gBAEF;AAAK,mBAAY,cAAjB;AAAgC,IAAA,GAAG,EAAEC,UAArC;AAAiD,IAAA,GAAG,EAAC,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CADF,eAOE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEd,UAAnD;AAA+D,IAAA,UAAU,EAAEC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADG,gBAEH;AAAK,mBAAY,WAAjB;AAA6B,IAAA,GAAG,EAAEkB,SAAlC;AAA6C,IAAA,GAAG,EAAC,wBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,EAKGlB,MAAM,iBAAI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALb,CAPF,CADF;AAiBD;;AAEDL,UAAU,CAACwB,SAAX,GAAuB;AACrBvB,EAAAA,cAAc,EAAEF,SAAS,CAAC0B,IAAV,CAAeC,UADV;AAErBxB,EAAAA,SAAS,EAAEH,SAAS,CAAC4B,IAAV,CAAeD;AAFL,CAAvB;AAKA,eAAe1B,UAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport whiteHeart from '../images/whiteHeartIcon.svg';\nimport blackHeart from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport './ActionsBar.css';\n\nfunction ActionsBar({ handleFavorite, isFavInit = false }) {\n  const [isFav, setIsFav] = useState(isFavInit);\n  const [coping, setCoping] = useState(false);\n\n  const inverteIsFavorite = useCallback(() => { setIsFav(!isFav); }, [isFav]);\n  const enableCopy = useCallback(() => { setCoping(true); }, []);\n  const disableCopy = useCallback(() => { setCoping(false); }, []);\n\n  useEffect(() => {\n    if (coping) {\n      navigator.clipboard.writeText(window.location.href)\n        .then(() => console.log('succes copy'))\n        .catch((err) => console.log(err));\n    }\n  }, [coping, setCoping]);\n\n  useEffect(() => { handleFavorite(isFav); }, [isFav, handleFavorite]);\n\n  return (\n    <div>\n      <button className=\"hidden-button\" onClick={inverteIsFavorite}>\n        {isFav\n          ? <img data-testid=\"favorite-btn\" src={blackHeart} alt=\"is amazing favorite\" />\n          : <img data-testid=\"favorite-btn\" src={whiteHeart} alt=\"is not favorite\" />\n        }\n      </button>\n      <button className=\"tooltip hidden-button\" onClick={enableCopy} onMouseOut={disableCopy}>\n        {coping\n          ? <p>Link copiado!</p>\n          : <img data-testid=\"share-btn\" src={shareIcon} alt=\"click to copy the link\" />\n        }\n        {coping || <span className=\"tooltiptext\">Copiar Link</span>}\n      </button>\n    </div>\n  );\n}\n\nActionsBar.propTypes = {\n  handleFavorite: PropTypes.func.isRequired,\n  isFavInit: PropTypes.bool.isRequired,\n};\n\nexport default ActionsBar;\n"]},"metadata":{},"sourceType":"module"}