{"ast":null,"code":"import _defineProperty from\"/home/lucaswerner/repositories/github-personal/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/lucaswerner/repositories/github-personal/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/lucaswerner/repositories/github-personal/recipes-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";export var getFavStorage=function getFavStorage(){return JSON.parse(localStorage.getItem('favoriteRecipes'))||[];};export var translateType=function translateType(type){switch(type){case'comida':case'bebida':case'comidas':case'babidas':return type;case'food':return'comida';case'drink':return'bebida';default:return\"Type \".concat(type,\" is not valid\");}};export var sendToFavoriteStorage=function sendToFavoriteStorage(_ref,type){var id=_ref.id,origin=_ref.origin,category=_ref.category,isAlcoholic=_ref.isAlcoholic,name=_ref.name,image=_ref.srcImage;var thisFood={id:id,type:translateType(type),area:origin||'',category:category,alcoholicOrNot:isAlcoholic||'',name:name,image:image};var favoriteList=getFavStorage();localStorage.setItem('favoriteRecipes',JSON.stringify([].concat(_toConsumableArray(favoriteList),[thisFood])));};export var rmFromFavoriteStorage=function rmFromFavoriteStorage(id){var favorite=getFavStorage();var oficialFavoriteList=favorite.filter(function(fav){return Number(fav.id)!==Number(id);});localStorage.setItem('favoriteRecipes',JSON.stringify(oficialFavoriteList));};export var getInProgress=function getInProgress(type){var inProggress=JSON.parse(localStorage.getItem('inProgressRecipes'))||{meals:{},cocktails:{}};switch(type){case'meals':case'food':return inProggress.meals;case'cocktails':case'drink':return inProggress.cocktails;default:return inProggress;}};var sin=function sin(type){switch(type){case'food':case'meals':return'meals';case'drink':case'cocktails':return'cocktails';default:return\"Type \".concat(type,\" not valid to sin\");}};export var setInProgress=function setInProgress(type,id,value){var current=getInProgress();var key=sin(type);var newInProgress=_objectSpread(_objectSpread({},current),{},_defineProperty({},key,_objectSpread(_objectSpread({},current[key]),{},_defineProperty({},id,value))));localStorage.setItem('inProgressRecipes',JSON.stringify(newInProgress));};export var rmInProgress=function rmInProgress(type,id){var current=getInProgress();delete current[sin(type)][id];localStorage.setItem('inProgressRecipes',JSON.stringify(current));};export var doneRecipes=function doneRecipes(id){var stored=JSON.parse(localStorage.getItem('doneRecipes'))||[];if(id||id===0)return stored.find(function(doneRecipe){return doneRecipe.id===Number(id);});return stored;};export var setDoneRecipeStorage=function setDoneRecipeStorage(_ref2,type){var id=_ref2.id,origin=_ref2.origin,category=_ref2.category,isAlcoholic=_ref2.isAlcoholic,name=_ref2.name,tags=_ref2.tags,image=_ref2.srcImage;var thisFood={id:id,type:translateType(type),area:origin||'',category:category,alcoholicOrNot:isAlcoholic||'',name:name,image:image,doneDate:new Date(),tags:''||tags.split(',')};localStorage.setItem('doneRecipes',JSON.stringify([].concat(_toConsumableArray(doneRecipes()),[thisFood])));};","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/services/APIs/APIlocalStorage.js"],"names":["getFavStorage","JSON","parse","localStorage","getItem","translateType","type","sendToFavoriteStorage","id","origin","category","isAlcoholic","name","image","srcImage","thisFood","area","alcoholicOrNot","favoriteList","setItem","stringify","rmFromFavoriteStorage","favorite","oficialFavoriteList","filter","fav","Number","getInProgress","inProggress","meals","cocktails","sin","setInProgress","value","current","key","newInProgress","rmInProgress","doneRecipes","stored","find","doneRecipe","setDoneRecipeStorage","tags","doneDate","Date","split"],"mappings":"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","sourcesContent":["export const getFavStorage = () => JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\nexport const translateType = (type) => {\n  switch (type) {\n    case 'comida':\n    case 'bebida':\n    case 'comidas':\n    case 'babidas':\n      return type;\n    case 'food': return 'comida';\n    case 'drink': return 'bebida';\n    default: return `Type ${type} is not valid`;\n  }\n};\n\nexport const sendToFavoriteStorage = ({\n  id,\n  origin,\n  category,\n  isAlcoholic,\n  name,\n  srcImage: image,\n}, type) => {\n  const thisFood = {\n    id,\n    type: translateType(type),\n    area: origin || '',\n    category,\n    alcoholicOrNot: isAlcoholic || '',\n    name,\n    image,\n  };\n  const favoriteList = getFavStorage();\n  localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteList, thisFood]));\n};\n\nexport const rmFromFavoriteStorage = (id) => {\n  const favorite = getFavStorage();\n  const oficialFavoriteList = favorite.filter((fav) => Number(fav.id) !== Number(id));\n  localStorage.setItem('favoriteRecipes', JSON.stringify(oficialFavoriteList));\n};\n\nexport const getInProgress = (type) => {\n  const inProggress = (\n    JSON.parse(localStorage.getItem('inProgressRecipes')) || { meals: {}, cocktails: {} }\n  );\n  switch (type) {\n    case 'meals':\n    case 'food':\n      return inProggress.meals;\n    case 'cocktails':\n    case 'drink':\n      return inProggress.cocktails;\n    default: return inProggress;\n  }\n};\n\nconst sin = (type) => {\n  switch (type) {\n    case 'food':\n    case 'meals':\n      return 'meals';\n    case 'drink':\n    case 'cocktails':\n      return 'cocktails';\n    default: return `Type ${type} not valid to sin`;\n  }\n};\n\nexport const setInProgress = (type, id, value) => {\n  const current = getInProgress();\n  const key = sin(type);\n  const newInProgress = { ...current, [key]: { ...current[key], [id]: value } };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newInProgress));\n};\n\nexport const rmInProgress = (type, id) => {\n  const current = getInProgress();\n  delete current[sin(type)][id];\n  localStorage.setItem('inProgressRecipes', JSON.stringify(current));\n};\n\nexport const doneRecipes = (id) => {\n  const stored = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n  if (id || id === 0) return stored.find((doneRecipe) => doneRecipe.id === Number(id));\n  return stored;\n};\n\nexport const setDoneRecipeStorage = (\n  { id, origin, category, isAlcoholic, name, tags, srcImage: image }, type,\n) => {\n  const thisFood = {\n    id,\n    type: translateType(type),\n    area: origin || '',\n    category,\n    alcoholicOrNot: isAlcoholic || '',\n    name,\n    image,\n    doneDate: new Date(),\n    tags: '' || tags.split(','),\n  };\n  localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes(), thisFood]));\n};\n"]},"metadata":{},"sourceType":"module"}