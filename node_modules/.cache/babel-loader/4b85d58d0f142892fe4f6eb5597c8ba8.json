{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/components/ShareIcon.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport './ShareIcon.css';\n\nfunction ShareIcon({\n  id,\n  type\n}) {\n  const [copying, setCopying] = useState(false);\n\n  const makeLink = () => `/${type}/${id}`;\n\n  const urlParams = makeLink(id, type);\n  const enableCopy = useCallback(() => {\n    setCopying(true);\n  }, []);\n  const disableCopy = useCallback(() => {\n    setCopying(false);\n  }, []);\n  useEffect(() => {\n    if (copying) {\n      navigator.clipboard.writeText(`${window.location.host}${urlParams}`).catch(err => console.log(err));\n    }\n  }, [copying, setCopying, urlParams]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"tooltip hidden-button\",\n    onClick: enableCopy,\n    onMouseOut: disableCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, copying ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Link copiado!\") : /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"click to copy the link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), copying || /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tooltiptext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }, \"Copiar Link\"));\n}\n\nShareIcon.propTypes = {\n  id: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default ShareIcon;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/components/ShareIcon.js"],"names":["React","useState","useEffect","useCallback","PropTypes","ShareIcon","id","type","copying","setCopying","makeLink","urlParams","enableCopy","disableCopy","navigator","clipboard","writeText","window","location","host","catch","err","console","log","shareIcon","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,OAAO,iBAAP;;AAGA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAnB,EAAiC;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMS,QAAQ,GAAG,MAAQ,IAAGH,IAAK,IAAGD,EAAG,EAAvC;;AACA,QAAMK,SAAS,GAAGD,QAAQ,CAACJ,EAAD,EAAKC,IAAL,CAA1B;AACA,QAAMK,UAAU,GAAGT,WAAW,CAAC,MAAM;AAAEM,IAAAA,UAAU,CAAC,IAAD,CAAV;AAAmB,GAA5B,EAA8B,EAA9B,CAA9B;AACA,QAAMI,WAAW,GAAGV,WAAW,CAAC,MAAM;AAAEM,IAAAA,UAAU,CAAC,KAAD,CAAV;AAAoB,GAA7B,EAA+B,EAA/B,CAA/B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,OAAJ,EAAa;AACXM,MAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA+B,GAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAK,GAAER,SAAU,EAAlE,EACGS,KADH,CACUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADlB;AAED;AACF,GALQ,EAKN,CAACb,OAAD,EAAUC,UAAV,EAAsBE,SAAtB,CALM,CAAT;AAOA,sBACE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEC,UAAnD;AAA+D,IAAA,UAAU,EAAEC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADI,gBAEJ;AAAK,mBAAY,WAAjB;AAA6B,IAAA,GAAG,EAAEgB,SAAlC;AAA6C,IAAA,GAAG,EAAC,wBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,EAKGhB,OAAO,iBAAI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALd,CADF;AASD;;AAEDH,SAAS,CAACoB,SAAV,GAAsB;AACpBnB,EAAAA,EAAE,EAAEF,SAAS,CAACsB,MAAV,CAAiBC,UADD;AAEpBpB,EAAAA,IAAI,EAAEH,SAAS,CAACwB,MAAV,CAAiBD;AAFH,CAAtB;AAKA,eAAetB,SAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport './ShareIcon.css';\n\n\nfunction ShareIcon({ id, type }) {\n  const [copying, setCopying] = useState(false);\n  const makeLink = () => (`/${type}/${id}`);\n  const urlParams = makeLink(id, type);\n  const enableCopy = useCallback(() => { setCopying(true); }, []);\n  const disableCopy = useCallback(() => { setCopying(false); }, []);\n\n  useEffect(() => {\n    if (copying) {\n      navigator.clipboard.writeText(`${window.location.host}${urlParams}`)\n        .catch((err) => console.log(err));\n    }\n  }, [copying, setCopying, urlParams]);\n\n  return (\n    <button className=\"tooltip hidden-button\" onClick={enableCopy} onMouseOut={disableCopy}>\n      {copying\n        ? <p>Link copiado!</p>\n        : <img data-testid=\"share-btn\" src={shareIcon} alt=\"click to copy the link\" />\n      }\n      {copying || <span className=\"tooltiptext\">Copiar Link</span>}\n    </button>\n  );\n}\n\nShareIcon.propTypes = {\n  id: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ShareIcon;\n"]},"metadata":{},"sourceType":"module"}