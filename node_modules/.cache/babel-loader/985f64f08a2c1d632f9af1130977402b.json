{"ast":null,"code":"export const fetchFoods = () => fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=').then(response => response.json().then(json => {\n  if (response.ok) return Promise.resolve(json);\n  return Promise.reject(json);\n}));\nexport const fetchDetailsFood = id => fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`).then(response => response.json().then(json => {\n  if (response.ok) return Promise.resolve(json);\n  return Promise.reject(json);\n})); // missing strDrinkAlternate, dateModified\n\nexport const handleFoodsData = ({\n  idMeal,\n  strMeal,\n  strCategory,\n  strInstructions,\n  strArea,\n  strMealThumb,\n  strYoutube,\n  strSource,\n  ...food\n}) => {\n  const obj = {\n    id: idMeal,\n    name: strMeal,\n    category: strCategory,\n    instructions: strInstructions,\n    origin: strArea,\n    srcImage: strMealThumb,\n    video: strYoutube,\n    source: strSource\n  };\n  const ingredientBase = /^strIngredient(\\d*)$/;\n  obj.ingredients = Object.entries(food).reduce((ing, [key, value]) => {\n    const [, id] = key.match(ingredientBase) || [];\n\n    if (id && value !== '') {\n      return [...ing, {\n        ingredient: value,\n        measure: food[`strMeasure${id}`] || null\n      }];\n    }\n\n    return ing;\n  }, []);\n  return obj;\n};","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/services/APIs/FOODS_API.js"],"names":["fetchFoods","fetch","then","response","json","ok","Promise","resolve","reject","fetchDetailsFood","id","handleFoodsData","idMeal","strMeal","strCategory","strInstructions","strArea","strMealThumb","strYoutube","strSource","food","obj","name","category","instructions","origin","srcImage","video","source","ingredientBase","ingredients","Object","entries","reduce","ing","key","value","match","ingredient","measure"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MACxBC,KAAK,CAAC,uDAAD,CAAL,CAA+DC,IAA/D,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAU;AAC3C,MAAID,QAAQ,CAACE,EAAb,EAAiB,OAAOC,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;AACjB,SAAOE,OAAO,CAACE,MAAR,CAAeJ,IAAf,CAAP;AACD,CAHa,CADhB,CADK;AASP,OAAO,MAAMK,gBAAgB,GAAIC,EAAD,IAC9BT,KAAK,CAAE,wDAAuDS,EAAG,EAA5D,CAAL,CACGR,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAU;AACjD,MAAID,QAAQ,CAACE,EAAb,EAAiB,OAAOC,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;AACjB,SAAOE,OAAO,CAACE,MAAR,CAAeJ,IAAf,CAAP;AACD,CAHmB,CADtB,CADK,C,CASP;;AACA,OAAO,MAAMO,eAAe,GAAG,CAAC;AAC9BC,EAAAA,MAD8B;AAE9BC,EAAAA,OAF8B;AAG9BC,EAAAA,WAH8B;AAI9BC,EAAAA,eAJ8B;AAK9BC,EAAAA,OAL8B;AAM9BC,EAAAA,YAN8B;AAO9BC,EAAAA,UAP8B;AAQ9BC,EAAAA,SAR8B;AAS9B,KAAGC;AAT2B,CAAD,KAUzB;AACJ,QAAMC,GAAG,GAAG;AACVX,IAAAA,EAAE,EAAEE,MADM;AAEVU,IAAAA,IAAI,EAAET,OAFI;AAGVU,IAAAA,QAAQ,EAAET,WAHA;AAIVU,IAAAA,YAAY,EAAET,eAJJ;AAKVU,IAAAA,MAAM,EAAET,OALE;AAMVU,IAAAA,QAAQ,EAAET,YANA;AAOVU,IAAAA,KAAK,EAAET,UAPG;AAQVU,IAAAA,MAAM,EAAET;AARE,GAAZ;AAWA,QAAMU,cAAc,GAAG,sBAAvB;AACAR,EAAAA,GAAG,CAACS,WAAJ,GAAkBC,MAAM,CAACC,OAAP,CAAeZ,IAAf,EAAqBa,MAArB,CAA4B,CAACC,GAAD,EAAM,CAACC,GAAD,EAAMC,KAAN,CAAN,KAAuB;AACnE,UAAM,GAAG1B,EAAH,IAASyB,GAAG,CAACE,KAAJ,CAAUR,cAAV,KAA6B,EAA5C;;AACA,QAAInB,EAAE,IAAI0B,KAAK,KAAK,EAApB,EAAwB;AACtB,aAAO,CAAC,GAAGF,GAAJ,EAAS;AAAEI,QAAAA,UAAU,EAAEF,KAAd;AAAqBG,QAAAA,OAAO,EAAEnB,IAAI,CAAE,aAAYV,EAAG,EAAjB,CAAJ,IAA2B;AAAzD,OAAT,CAAP;AACD;;AACD,WAAOwB,GAAP;AACD,GANiB,EAMf,EANe,CAAlB;AAOA,SAAOb,GAAP;AACD,CA/BM","sourcesContent":["export const fetchFoods = () => (\n  fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=').then(\n    (response) => response.json().then((json) => {\n      if (response.ok) return Promise.resolve(json);\n      return Promise.reject(json);\n    }),\n  )\n);\n\nexport const fetchDetailsFood = (id) => (\n  fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)\n    .then((response) => response.json().then((json) => {\n      if (response.ok) return Promise.resolve(json);\n      return Promise.reject(json);\n    }),\n  )\n);\n\n// missing strDrinkAlternate, dateModified\nexport const handleFoodsData = ({\n  idMeal,\n  strMeal,\n  strCategory,\n  strInstructions,\n  strArea,\n  strMealThumb,\n  strYoutube,\n  strSource,\n  ...food\n}) => {\n  const obj = {\n    id: idMeal,\n    name: strMeal,\n    category: strCategory,\n    instructions: strInstructions,\n    origin: strArea,\n    srcImage: strMealThumb,\n    video: strYoutube,\n    source: strSource,\n  };\n\n  const ingredientBase = /^strIngredient(\\d*)$/;\n  obj.ingredients = Object.entries(food).reduce((ing, [key, value]) => {\n    const [, id] = key.match(ingredientBase) || [];\n    if (id && value !== '') {\n      return [...ing, { ingredient: value, measure: food[`strMeasure${id}`] || null }];\n    }\n    return ing;\n  }, []);\n  return obj;\n};\n"]},"metadata":{},"sourceType":"module"}