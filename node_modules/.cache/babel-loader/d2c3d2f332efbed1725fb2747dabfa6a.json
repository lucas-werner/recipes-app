{"ast":null,"code":"export const getFavStorage = () => JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\nexport const translateType = type => {\n  switch (type) {\n    case 'comida':\n    case 'bebida':\n      return type;\n\n    case 'food':\n      return 'comida';\n\n    case 'drink':\n      return 'bebida';\n\n    default:\n      return 'type is not valid';\n  }\n};\nexport const sendToFavoriteStorage = ({\n  id,\n  origin,\n  category,\n  isAlcoholic,\n  name,\n  srcImage: image\n}, type) => {\n  const thisFood = {\n    id,\n    type: translateType(type),\n    area: origin || '',\n    category,\n    alcoholicOrNot: isAlcoholic || '',\n    name,\n    image\n  };\n  const favoriteList = getFavStorage();\n  localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteList, thisFood]));\n};\nexport const rmFromFavoriteStorage = id => {\n  const favorite = getFavStorage();\n  const oficialFavoriteList = favorite.filter(fav => Number(fav.id) !== Number(id));\n  localStorage.setItem('favoriteRecipes', JSON.stringify(oficialFavoriteList));\n};\nexport const getInProgress = type => {\n  const inProggress = JSON.parse(localStorage.getItem('inProgressRecipes')) || {\n    meals: {},\n    cocktails: {}\n  };\n\n  switch (type) {\n    case 'meals':\n    case 'food':\n      return inProggress.meals;\n\n    case 'cocktails':\n    case 'drink':\n      return inProggress.cocktails;\n\n    default:\n      return inProggress;\n  }\n};\n\nconst sin = type => {\n  switch (type) {\n    case 'food':\n    case 'meals':\n      return 'meals';\n\n    case 'drink':\n    case 'cocktails':\n      return 'cocktails';\n\n    default:\n      return `type ${type} not valid to sin`;\n  }\n};\n\nexport const setInProgress = (type, id, value) => {\n  const current = getInProgress();\n  const key = sin(type);\n  const newInProgress = { ...current,\n    [key]: { ...current[key],\n      [id]: value\n    }\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newInProgress));\n};\nexport const rmInProgress = (type, id) => {\n  const current = getInProgress();\n  const key = sin(type);\n  const newPart = Object.entries(current[key]).reduce((acc, [elem, value]) => {\n    if (id !== elem) return acc[elem] + value;\n    return acc;\n  }, {});\n  localStorage.setItem('inProgressRecipes', JSON.stringify({ ...current,\n    [key]: newPart\n  }));\n};\nexport const doneRecipes = id => {\n  const stored = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n  if (id || id === 0) return stored.find(doneRecipe => doneRecipe.id === Number(id));\n  return stored;\n};\nexport const setDoneRecipeStorage = ({\n  id,\n  origin,\n  category,\n  isAlcoholic,\n  name,\n  srcImage: image\n}, type) => {\n  const thisFood = {\n    id,\n    type: translateType(type),\n    area: origin || '',\n    category,\n    alcoholicOrNot: isAlcoholic || '',\n    name,\n    image,\n    doneDate: new Date(),\n    tags: []\n  };\n  localStorage('doneRecipes', JSON.parse([...doneRecipes(), thisFood]));\n};","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-recipes-app-01/src/services/APIs/APIlocalStorage.js"],"names":["getFavStorage","JSON","parse","localStorage","getItem","translateType","type","sendToFavoriteStorage","id","origin","category","isAlcoholic","name","srcImage","image","thisFood","area","alcoholicOrNot","favoriteList","setItem","stringify","rmFromFavoriteStorage","favorite","oficialFavoriteList","filter","fav","Number","getInProgress","inProggress","meals","cocktails","sin","setInProgress","value","current","key","newInProgress","rmInProgress","newPart","Object","entries","reduce","acc","elem","doneRecipes","stored","find","doneRecipe","setDoneRecipeStorage","doneDate","Date","tags"],"mappings":"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","sourcesContent":["export const getFavStorage = () => JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\nexport const translateType = (type) => {\n  switch (type) {\n    case 'comida':\n    case 'bebida':\n      return type;\n    case 'food': return 'comida';\n    case 'drink': return 'bebida';\n    default: return 'type is not valid';\n  }\n};\n\nexport const sendToFavoriteStorage = ({\n  id,\n  origin,\n  category,\n  isAlcoholic,\n  name,\n  srcImage: image,\n}, type) => {\n  const thisFood = {\n    id,\n    type: translateType(type),\n    area: origin || '',\n    category,\n    alcoholicOrNot: isAlcoholic || '',\n    name,\n    image,\n  };\n  const favoriteList = getFavStorage();\n  localStorage.setItem('favoriteRecipes', JSON.stringify([...favoriteList, thisFood]));\n};\n\nexport const rmFromFavoriteStorage = (id) => {\n  const favorite = getFavStorage();\n  const oficialFavoriteList = favorite.filter((fav) => Number(fav.id) !== Number(id));\n  localStorage.setItem('favoriteRecipes', JSON.stringify(oficialFavoriteList));\n};\n\nexport const getInProgress = (type) => {\n  const inProggress = (\n    JSON.parse(localStorage.getItem('inProgressRecipes')) || { meals: {}, cocktails: {} }\n  );\n  switch (type) {\n    case 'meals':\n    case 'food':\n      return inProggress.meals;\n    case 'cocktails':\n    case 'drink':\n      return inProggress.cocktails;\n    default: return inProggress;\n  }\n};\n\nconst sin = (type) => {\n  switch (type) {\n    case 'food':\n    case 'meals':\n      return 'meals';\n    case 'drink':\n    case 'cocktails':\n      return 'cocktails';\n    default: return `type ${type} not valid to sin`;\n  }\n};\n\nexport const setInProgress = (type, id, value) => {\n  const current = getInProgress();\n  const key = sin(type);\n  const newInProgress = { ...current, [key]: { ...current[key], [id]: value } };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newInProgress));\n};\n\nexport const rmInProgress = (type, id) => {\n  const current = getInProgress();\n  const key = sin(type);\n  const newPart = Object.entries(current[key]).reduce((acc, [elem, value]) => {\n    if (id !== elem) return acc[elem] + value;\n    return acc;\n  }, {});\n  localStorage.setItem('inProgressRecipes', JSON.stringify({ ...current, [key]: newPart }));\n};\n\nexport const doneRecipes = (id) => {\n  const stored = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n  if (id || id === 0) return stored.find((doneRecipe) => doneRecipe.id === Number(id));\n  return stored;\n};\n\nexport const setDoneRecipeStorage = ({\n  id,\n  origin,\n  category,\n  isAlcoholic,\n  name,\n  srcImage: image,\n}, type) => {\n  const thisFood = {\n    id,\n    type: translateType(type),\n    area: origin || '',\n    category,\n    alcoholicOrNot: isAlcoholic || '',\n    name,\n    image,\n    doneDate: new Date(),\n    tags: [],\n  };\n  localStorage('doneRecipes', JSON.parse([...doneRecipes(), thisFood]));\n};\n"]},"metadata":{},"sourceType":"module"}