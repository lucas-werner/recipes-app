{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/github-personal/recipes-app/src/components/ShareIcon.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport './ShareIcon.css';\n\nfunction ShareIcon({\n  textToCopy,\n  index\n}) {\n  const [copying, setCopying] = useState(false);\n  const enableCopy = useCallback(() => {\n    setCopying(true);\n  }, []);\n  const disableCopy = useCallback(() => {\n    setCopying(false);\n  }, []);\n  useEffect(() => {\n    if (copying) {\n      navigator.clipboard.writeText(textToCopy).catch(err => console.log(err));\n    }\n  }, [copying, setCopying]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"tooltip hidden-button\",\n    onClick: enableCopy,\n    onMouseOut: disableCopy,\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, copying ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Link copiado!\") : /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"click to copy the link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), copying || /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tooltiptext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, \"Copiar Link\"));\n}\n\nShareIcon.propTypes = {\n  index: PropTypes.number.isRequired,\n  textToCopy: PropTypes.string.isRequired\n};\nexport default ShareIcon;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/recipes-app/src/components/ShareIcon.js"],"names":["React","useState","useEffect","useCallback","PropTypes","ShareIcon","textToCopy","index","copying","setCopying","enableCopy","disableCopy","navigator","clipboard","writeText","catch","err","console","log","shareIcon","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,OAAO,iBAAP;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAnB,EAA0C;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMS,UAAU,GAAGP,WAAW,CAAC,MAAM;AAAEM,IAAAA,UAAU,CAAC,IAAD,CAAV;AAAmB,GAA5B,EAA8B,EAA9B,CAA9B;AACA,QAAME,WAAW,GAAGR,WAAW,CAAC,MAAM;AAAEM,IAAAA,UAAU,CAAC,KAAD,CAAV;AAAoB,GAA7B,EAA+B,EAA/B,CAA/B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,OAAJ,EAAa;AACXI,MAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BR,UAA9B,EACGS,KADH,CACUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADlB;AAED;AACF,GALQ,EAKN,CAACR,OAAD,EAAUC,UAAV,CALM,CAAT;AAOA,sBACE;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,OAAO,EAAEC,UAFX;AAGE,IAAA,UAAU,EAAEC,WAHd;AAIE,mBAAc,GAAEJ,KAAM,uBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADI,gBAEJ;AAAK,mBAAY,WAAjB;AAA6B,IAAA,GAAG,EAAEW,SAAlC;AAA6C,IAAA,GAAG,EAAC,wBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARN,EAUGX,OAAO,iBAAI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVd,CADF;AAcD;;AAEDH,SAAS,CAACe,SAAV,GAAsB;AACpBb,EAAAA,KAAK,EAAEH,SAAS,CAACiB,MAAV,CAAiBC,UADJ;AAEpBhB,EAAAA,UAAU,EAAEF,SAAS,CAACmB,MAAV,CAAiBD;AAFT,CAAtB;AAKA,eAAejB,SAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport './ShareIcon.css';\n\nfunction ShareIcon({ textToCopy, index }) {\n  const [copying, setCopying] = useState(false);\n  const enableCopy = useCallback(() => { setCopying(true); }, []);\n  const disableCopy = useCallback(() => { setCopying(false); }, []);\n\n  useEffect(() => {\n    if (copying) {\n      navigator.clipboard.writeText(textToCopy)\n        .catch((err) => console.log(err));\n    }\n  }, [copying, setCopying]);\n\n  return (\n    <button\n      className=\"tooltip hidden-button\"\n      onClick={enableCopy}\n      onMouseOut={disableCopy}\n      data-testid={`${index}-horizontal-share-btn`}\n    >\n      {copying\n        ? <p>Link copiado!</p>\n        : <img data-testid=\"share-btn\" src={shareIcon} alt=\"click to copy the link\" />\n      }\n      {copying || <span className=\"tooltiptext\">Copiar Link</span>}\n    </button>\n  );\n}\n\nShareIcon.propTypes = {\n  index: PropTypes.number.isRequired,\n  textToCopy: PropTypes.string.isRequired,\n};\n\nexport default ShareIcon;\n"]},"metadata":{},"sourceType":"module"}